
'***** Auto generated by c2wx! *****

Namespace sdl

#Import "<libc>"

#Import "include/*.h"

#Import "<SDL2/SDL.h>"

#If __TARGET__="linux"

	'TODO

#ElseIf __TARGET__="windows"

	'TODO

#ElseIf __TARGET__="macos"

	#Import "lib/macos/*.a"
	#Import "<libSDL2.a>"

	#Import "WX_CC_OPTS_MACOS=-DSDL_VIDEO_STATIC_ANGLE"
	#Import "WX_CPP_OPTS_MACOS=-DSDL_VIDEO_STATIC_ANGLE"

	#Import "<libm.a>"
	#Import "<libiconv.a>"
	#Import "<libpthread.a>"
	#Import "<libEGL_static.a>" '// libEGL from Angle

	#Import "<Foundation.framework>"
	#Import "<CoreFoundation.framework>"
	#Import "<CoreGraphics.framework>"
	#Import "<IOKit.framework>"
	#Import "<IOSurface.framework>"
	#Import "<Metal.framework>"
	#Import "<Cocoa.framework>"
	#Import "<QuartzCore.framework>"
	#Import "<GameController.framework>"
	#Import "<CoreAudio.framework>"
	#Import "<AudioToolbox.framework>"
	#Import "<CoreHaptics.framework>"
	#Import "<ForceFeedback.framework>"
	#Import "<Carbon.framework>"
	#Import "<AVFoundation.framework>"

#End

Extern

'***** File: include/SDL2/SDL_platform.h *****

Function SDL_GetPlatform:CString()

'***** File: include/SDL2/SDL_stdinc.h *****

Enum SDL_bool
End
Const SDL_FALSE:SDL_bool
Const SDL_TRUE:SDL_bool
Alias Sint8:Int
Alias Uint8:Int
Alias Sint16:Int
Alias Uint16:Int
Alias Sint32:Int
Alias Uint32:Int
Alias Sint64:Int
Alias Uint64:Int
Enum SDL_DUMMY_ENUM
End
Const DUMMY_ENUM_VALUE:SDL_DUMMY_ENUM
Function SDL_malloc:Void Ptr( size:libc.size_t )
Function SDL_calloc:Void Ptr( nmemb:libc.size_t, size:libc.size_t )
Function SDL_realloc:Void Ptr( mem:Void Ptr, size:libc.size_t )
Function SDL_free:Void( mem:Void Ptr )
Alias SDL_malloc_func:Void Ptr( libc.size_t )
Alias SDL_calloc_func:Void Ptr( libc.size_t, libc.size_t )
Alias SDL_realloc_func:Void Ptr( Void Ptr, libc.size_t )
Alias SDL_free_func:Void( Void Ptr )
Function SDL_GetMemoryFunctions:Void( malloc_func:SDL_malloc_func Ptr, calloc_func:SDL_calloc_func Ptr, realloc_func:SDL_realloc_func Ptr, free_func:SDL_free_func Ptr )
Function SDL_SetMemoryFunctions:Int( malloc_func:SDL_malloc_func, calloc_func:SDL_calloc_func, realloc_func:SDL_realloc_func, free_func:SDL_free_func )
Function SDL_GetNumAllocations:Int(  )
Function SDL_getenv:libc.char_t Ptr( name:CString )
Function SDL_setenv:Int( name:CString, value:CString, overwrite:Int )
Function SDL_qsort:Void( base:Void Ptr, nmemb:libc.size_t, size:libc.size_t, compare:Int( Void Ptr, Void Ptr ) )
Function SDL_abs:Int( x:Int )
Function SDL_isalpha:Int( x:Int )
Function SDL_isalnum:Int( x:Int )
Function SDL_isblank:Int( x:Int )
Function SDL_iscntrl:Int( x:Int )
Function SDL_isdigit:Int( x:Int )
Function SDL_isxdigit:Int( x:Int )
Function SDL_ispunct:Int( x:Int )
Function SDL_isspace:Int( x:Int )
Function SDL_isupper:Int( x:Int )
Function SDL_islower:Int( x:Int )
Function SDL_isprint:Int( x:Int )
Function SDL_isgraph:Int( x:Int )
Function SDL_toupper:Int( x:Int )
Function SDL_tolower:Int( x:Int )
Function SDL_crc32:Uint32( crc:Uint32, data:Void Ptr, len:libc.size_t )
Function SDL_memset4:Void( dst:Void Ptr, val:Uint32, dwords:libc.size_t )
Function SDL_memcmp:Int( s1:Void Ptr, s2:Void Ptr, len:libc.size_t )
Function SDL_wcslen:libc.size_t( wstr:Int Ptr )
Function SDL_wcsdup:Int Ptr(  )
Function SDL_wcsstr:Int Ptr(  )
Function SDL_wcscmp:Int( str1:Int Ptr, str2:Int Ptr )
Function SDL_wcsncmp:Int( str1:Int Ptr, str2:Int Ptr, maxlen:libc.size_t )
Function SDL_wcscasecmp:Int( str1:Int Ptr, str2:Int Ptr )
Function SDL_wcsncasecmp:Int( str1:Int Ptr, str2:Int Ptr, len:libc.size_t )
Function SDL_strlen:libc.size_t( str:CString )
Function SDL_strdup:libc.char_t Ptr( str:CString )
Function SDL_strrev:libc.char_t Ptr( str:libc.char_t Ptr )
Function SDL_strupr:libc.char_t Ptr( str:libc.char_t Ptr )
Function SDL_strlwr:libc.char_t Ptr( str:libc.char_t Ptr )
Function SDL_strchr:libc.char_t Ptr( str:CString, c:Int )
Function SDL_strrchr:libc.char_t Ptr( str:CString, c:Int )
Function SDL_strstr:libc.char_t Ptr( haystack:CString, needle:CString )
Function SDL_strtokr:libc.char_t Ptr( s1:libc.char_t Ptr, s2:CString, saveptr:libc.char_t Ptr Ptr )
Function SDL_utf8strlen:libc.size_t( str:CString )
Function SDL_itoa:libc.char_t Ptr( value:Int, str:libc.char_t Ptr, radix:Int )
Function SDL_uitoa:libc.char_t Ptr( value:UInt, str:libc.char_t Ptr, radix:Int )
Function SDL_ltoa:libc.char_t Ptr( value:Long, str:libc.char_t Ptr, radix:Int )
Function SDL_ultoa:libc.char_t Ptr( value:ULong, str:libc.char_t Ptr, radix:Int )
Function SDL_lltoa:libc.char_t Ptr( value:Sint64, str:libc.char_t Ptr, radix:Int )
Function SDL_ulltoa:libc.char_t Ptr( value:Uint64, str:libc.char_t Ptr, radix:Int )
Function SDL_atoi:Int( str:CString )
Function SDL_atof:Double( str:CString )
Function SDL_strtol:Long( str:CString, endp:libc.char_t Ptr Ptr, base:Int )
Function SDL_strtoul:ULong( str:CString, endp:libc.char_t Ptr Ptr, base:Int )
Function SDL_strtoll:Sint64( str:CString, endp:libc.char_t Ptr Ptr, base:Int )
Function SDL_strtoull:Uint64( str:CString, endp:libc.char_t Ptr Ptr, base:Int )
Function SDL_strtod:Double( str:CString, endp:libc.char_t Ptr Ptr )
Function SDL_strcmp:Int( str1:CString, str2:CString )
Function SDL_strncmp:Int( str1:CString, str2:CString, maxlen:libc.size_t )
Function SDL_strcasecmp:Int( str1:CString, str2:CString )
Function SDL_strncasecmp:Int( str1:CString, str2:CString, len:libc.size_t )
Function SDL_sscanf:Int( text:CString, Int )
Function SDL_vsscanf:Int( text:CString, fmt:CString, ap:Int )
Function SDL_asprintf:Int( strp:libc.char_t Ptr Ptr, Int )
Function SDL_vasprintf:Int( strp:libc.char_t Ptr Ptr, fmt:CString, ap:Int )
Function SDL_acos:Double( x:Double )
Function SDL_acosf:Float( x:Float )
Function SDL_asin:Double( x:Double )
Function SDL_asinf:Float( x:Float )
Function SDL_atan:Double( x:Double )
Function SDL_atanf:Float( x:Float )
Function SDL_atan2:Double( y:Double, x:Double )
Function SDL_atan2f:Float( y:Float, x:Float )
Function SDL_ceil:Double( x:Double )
Function SDL_ceilf:Float( x:Float )
Function SDL_copysign:Double( x:Double, y:Double )
Function SDL_copysignf:Float( x:Float, y:Float )
Function SDL_cos:Double( x:Double )
Function SDL_cosf:Float( x:Float )
Function SDL_exp:Double( x:Double )
Function SDL_expf:Float( x:Float )
Function SDL_fabs:Double( x:Double )
Function SDL_fabsf:Float( x:Float )
Function SDL_floor:Double( x:Double )
Function SDL_floorf:Float( x:Float )
Function SDL_trunc:Double( x:Double )
Function SDL_truncf:Float( x:Float )
Function SDL_fmod:Double( x:Double, y:Double )
Function SDL_fmodf:Float( x:Float, y:Float )
Function SDL_log:Double( x:Double )
Function SDL_logf:Float( x:Float )
Function SDL_log10:Double( x:Double )
Function SDL_log10f:Float( x:Float )
Function SDL_pow:Double( x:Double, y:Double )
Function SDL_powf:Float( x:Float, y:Float )
Function SDL_round:Double( x:Double )
Function SDL_roundf:Float( x:Float )
Function SDL_lround:Long( x:Double )
Function SDL_lroundf:Long( x:Float )
Function SDL_scalbn:Double( x:Double, n:Int )
Function SDL_scalbnf:Float( x:Float, n:Int )
Function SDL_sin:Double( x:Double )
Function SDL_sinf:Float( x:Float )
Function SDL_sqrt:Double( x:Double )
Function SDL_sqrtf:Float( x:Float )
Function SDL_tan:Double( x:Double )
Function SDL_tanf:Float( x:Float )
Alias SDL_iconv_t:_SDL_iconv_t Ptr
Function SDL_iconv_open:SDL_iconv_t( tocode:CString, fromcode:CString )
Function SDL_iconv_close:Int( cd:SDL_iconv_t )
Function SDL_iconv:libc.size_t( cd:SDL_iconv_t, inbuf:libc.const_char_t Ptr Ptr, inbytesleft:libc.size_t Ptr, outbuf:libc.char_t Ptr Ptr, outbytesleft:libc.size_t Ptr )
Function SDL_iconv_string:libc.char_t Ptr( tocode:CString, fromcode:CString, inbuf:CString, inbytesleft:libc.size_t )

'***** File: include/SDL2/SDL_main.h *****

Alias SDL_main_func:Int( Int, libc.char_t Ptr Ptr )
Function SDL_main:Int( argc:Int, argv:libc.char_t Ptr Ptr )
Function SDL_SetMainReady:Void(  )
Function SDL_RegisterApp:Int( name:CString, style:Uint32, hInst:Void Ptr )
Function SDL_UnregisterApp:Void(  )

'***** File: include/SDL2/SDL_assert.h *****

Function __debugbreak:Void(  )
Enum SDL_AssertState
End
Const SDL_ASSERTION_RETRY:SDL_AssertState
Const SDL_ASSERTION_BREAK:SDL_AssertState
Const SDL_ASSERTION_ABORT:SDL_AssertState
Const SDL_ASSERTION_IGNORE:SDL_AssertState
Const SDL_ASSERTION_ALWAYS_IGNORE:SDL_AssertState
Struct SDL_AssertData
	Field always_ignore:Int
	Field trigger_count:UInt
	Field condition:CString
	Field filename:CString
	Field linenum:Int
	Field function_:CString
	Field next_:SDL_AssertData Ptr
End
Function SDL_ReportAssertion:SDL_AssertState( SDL_AssertData Ptr, CString, CString, Int )
Alias SDL_AssertionHandler:SDL_AssertState( SDL_AssertData Ptr, Void Ptr )
Function SDL_SetAssertionHandler:Void( handler:SDL_AssertionHandler, userdata:Void Ptr )
Function SDL_GetDefaultAssertionHandler:SDL_AssertionHandler(  )
Function SDL_GetAssertionHandler:SDL_AssertionHandler( puserdata:Void Ptr Ptr )
Function SDL_GetAssertionReport:SDL_AssertData Ptr(  )
Function SDL_ResetAssertionReport:Void(  )

'***** File: include/SDL2/SDL_atomic.h *****

Alias SDL_SpinLock:Int
Function SDL_AtomicTryLock:SDL_bool( lock:SDL_SpinLock Ptr )
Function SDL_AtomicLock:Void( lock:SDL_SpinLock Ptr )
Function SDL_AtomicUnlock:Void( lock:SDL_SpinLock Ptr )
Function SDL_MemoryBarrierReleaseFunction:Void(  )
Function SDL_MemoryBarrierAcquireFunction:Void(  )
Struct SDL_atomic_t
	Field value:Int
End
Function SDL_AtomicCAS:SDL_bool( a:SDL_atomic_t Ptr, oldval:Int, newval:Int )
Function SDL_AtomicSet:Int( a:SDL_atomic_t Ptr, v:Int )
Function SDL_AtomicGet:Int( a:SDL_atomic_t Ptr )
Function SDL_AtomicAdd:Int( a:SDL_atomic_t Ptr, v:Int )
Function SDL_AtomicCASPtr:SDL_bool( a:Void Ptr Ptr, oldval:Void Ptr, newval:Void Ptr )
Function SDL_AtomicSetPtr:Void Ptr( a:Void Ptr Ptr, v:Void Ptr )
Function SDL_AtomicGetPtr:Void Ptr( a:Void Ptr Ptr )

'***** File: include/SDL2/SDL_error.h *****

Function SDL_SetError:Int( Int )
Function SDL_GetError:libc.char_t Ptr(  )
Function SDL_GetErrorMsg:libc.char_t Ptr( errstr:libc.char_t Ptr, maxlen:Int )
Function SDL_ClearError:Void(  )
Enum SDL_errorcode
End
Const SDL_ENOMEM:SDL_errorcode
Const SDL_EFREAD:SDL_errorcode
Const SDL_EFWRITE:SDL_errorcode
Const SDL_EFSEEK:SDL_errorcode
Const SDL_UNSUPPORTED:SDL_errorcode
Const SDL_LASTERROR:SDL_errorcode
Function SDL_Error:Int( code:SDL_errorcode )

'***** File: include/SDL2/SDL_endian.h *****

Function _m_prefetch:Void( __P:Void Ptr )
Function SDL_SwapFloat:Float( x:Float )

'***** File: include/SDL2/SDL_mutex.h *****

Function SDL_CreateMutex:SDL_mutex Ptr(  )
Function SDL_LockMutex:Int( mutex:SDL_mutex Ptr )
Function SDL_TryLockMutex:Int( mutex:SDL_mutex Ptr )
Function SDL_UnlockMutex:Int( mutex:SDL_mutex Ptr )
Function SDL_DestroyMutex:Void( mutex:SDL_mutex Ptr )
Alias SDL_sem:SDL_semaphore
Function SDL_CreateSemaphore:SDL_sem Ptr( initial_value:Uint32 )
Function SDL_DestroySemaphore:Void( sem:SDL_sem Ptr )
Function SDL_SemWait:Int( sem:SDL_sem Ptr )
Function SDL_SemTryWait:Int( sem:SDL_sem Ptr )
Function SDL_SemWaitTimeout:Int( sem:SDL_sem Ptr, ms:Uint32 )
Function SDL_SemPost:Int( sem:SDL_sem Ptr )
Function SDL_SemValue:Uint32( sem:SDL_sem Ptr )
Function SDL_CreateCond:SDL_cond Ptr(  )
Function SDL_DestroyCond:Void( cond:SDL_cond Ptr )
Function SDL_CondSignal:Int( cond:SDL_cond Ptr )
Function SDL_CondBroadcast:Int( cond:SDL_cond Ptr )
Function SDL_CondWait:Int( cond:SDL_cond Ptr, mutex:SDL_mutex Ptr )
Function SDL_CondWaitTimeout:Int( cond:SDL_cond Ptr, mutex:SDL_mutex Ptr, ms:Uint32 )

'***** File: include/SDL2/SDL_thread.h *****

Alias SDL_threadID:ULong
Alias SDL_TLSID:UInt
Enum SDL_ThreadPriority
End
Const SDL_THREAD_PRIORITY_LOW:SDL_ThreadPriority
Const SDL_THREAD_PRIORITY_NORMAL:SDL_ThreadPriority
Const SDL_THREAD_PRIORITY_HIGH:SDL_ThreadPriority
Const SDL_THREAD_PRIORITY_TIME_CRITICAL:SDL_ThreadPriority
Alias SDL_ThreadFunction:Int( Void Ptr )
Alias pfnSDL_CurrentEndThread:Void( UInt )
Function SDL_CreateThread:SDL_Thread Ptr( fn:SDL_ThreadFunction, name:CString, data:Void Ptr, pfnBeginThread:Int, pfnEndThread:pfnSDL_CurrentEndThread )
Function SDL_CreateThreadWithStackSize:SDL_Thread Ptr( fn:Int( Void Ptr ), name:CString, stacksize:libc.size_t, data:Void Ptr, pfnBeginThread:Int, pfnEndThread:pfnSDL_CurrentEndThread )
Function SDL_GetThreadName:CString( thread:SDL_Thread Ptr )
Function SDL_ThreadID:SDL_threadID(  )
Function SDL_GetThreadID:SDL_threadID( thread:SDL_Thread Ptr )
Function SDL_SetThreadPriority:Int( priority:SDL_ThreadPriority )
Function SDL_WaitThread:Void( thread:SDL_Thread Ptr, status:Int Ptr )
Function SDL_DetachThread:Void( thread:SDL_Thread Ptr )
Function SDL_TLSCreate:SDL_TLSID(  )
Function SDL_TLSGet:Void Ptr( id:SDL_TLSID )
Function SDL_TLSSet:Int( id:SDL_TLSID, value:Void Ptr, destructor:Void( Void Ptr ) )
Function SDL_TLSCleanup:Void(  )

'***** File: include/SDL2/SDL_rwops.h *****

Struct SDL_RWops
	Field size:Sint64( SDL_RWops Ptr )
	Field seek:Sint64( SDL_RWops Ptr, Sint64, Int )
	Field read:libc.size_t( SDL_RWops Ptr, Void Ptr, libc.size_t, libc.size_t )
	Field write:libc.size_t( SDL_RWops Ptr, Void Ptr, libc.size_t, libc.size_t )
	Field close:Int( SDL_RWops Ptr )
	Field type:Uint32
End
Function SDL_RWFromFile:SDL_RWops Ptr( file:CString, mode:CString )
Function SDL_RWFromFP:SDL_RWops Ptr( fp:Void Ptr, autoclose:SDL_bool )
Function SDL_RWFromMem:SDL_RWops Ptr( mem:Void Ptr, size:Int )
Function SDL_RWFromConstMem:SDL_RWops Ptr( mem:Void Ptr, size:Int )
Function SDL_AllocRW:SDL_RWops Ptr(  )
Function SDL_FreeRW:Void( area:SDL_RWops Ptr )
Function SDL_RWsize:Sint64( context:SDL_RWops Ptr )
Function SDL_RWseek:Sint64( context:SDL_RWops Ptr, offset:Sint64, whence:Int )
Function SDL_RWtell:Sint64( context:SDL_RWops Ptr )
Function SDL_RWread:libc.size_t( context:SDL_RWops Ptr, ptr_:Void Ptr, size:libc.size_t, maxnum:libc.size_t )
Function SDL_RWwrite:libc.size_t( context:SDL_RWops Ptr, ptr_:Void Ptr, size:libc.size_t, num:libc.size_t )
Function SDL_RWclose:Int( context:SDL_RWops Ptr )
Function SDL_LoadFile_RW:Void Ptr( src:SDL_RWops Ptr, datasize:libc.size_t Ptr, freesrc:Int )
Function SDL_LoadFile:Void Ptr( file:CString, datasize:libc.size_t Ptr )
Function SDL_ReadU8:Uint8( src:SDL_RWops Ptr )
Function SDL_ReadLE16:Uint16( src:SDL_RWops Ptr )
Function SDL_ReadBE16:Uint16( src:SDL_RWops Ptr )
Function SDL_ReadLE32:Uint32( src:SDL_RWops Ptr )
Function SDL_ReadBE32:Uint32( src:SDL_RWops Ptr )
Function SDL_ReadLE64:Uint64( src:SDL_RWops Ptr )
Function SDL_ReadBE64:Uint64( src:SDL_RWops Ptr )
Function SDL_WriteU8:libc.size_t( dst:SDL_RWops Ptr, value:Uint8 )
Function SDL_WriteLE16:libc.size_t( dst:SDL_RWops Ptr, value:Uint16 )
Function SDL_WriteBE16:libc.size_t( dst:SDL_RWops Ptr, value:Uint16 )
Function SDL_WriteLE32:libc.size_t( dst:SDL_RWops Ptr, value:Uint32 )
Function SDL_WriteBE32:libc.size_t( dst:SDL_RWops Ptr, value:Uint32 )
Function SDL_WriteLE64:libc.size_t( dst:SDL_RWops Ptr, value:Uint64 )
Function SDL_WriteBE64:libc.size_t( dst:SDL_RWops Ptr, value:Uint64 )

'***** File: include/SDL2/SDL_audio.h *****

Alias SDL_AudioFormat:Uint16
Alias SDL_AudioCallback:Void( Void Ptr, Uint8 Ptr, Int )
Struct SDL_AudioSpec
	Field freq:Int
	Field format:SDL_AudioFormat
	Field channels:Uint8
	Field silence:Uint8
	Field samples:Uint16
	Field padding:Uint16
	Field size:Uint32
	Field callback:SDL_AudioCallback
	Field userdata:Void Ptr
End
Alias SDL_AudioFilter:Void( SDL_AudioCVT Ptr, SDL_AudioFormat )
Struct SDL_AudioCVT
	Field needed:Int
	Field src_format:SDL_AudioFormat
	Field dst_format:SDL_AudioFormat
	Field rate_incr:Double
	Field buf:Uint8 Ptr
	Field len:Int
	Field len_cvt:Int
	Field len_mult:Int
	Field len_ratio:Double
	Field filters:SDL_AudioFilter Ptr
	Field filter_index:Int
End
Function SDL_GetNumAudioDrivers:Int(  )
Function SDL_GetAudioDriver:CString( index:Int )
Function SDL_AudioInit:Int( driver_name:CString )
Function SDL_AudioQuit:Void(  )
Function SDL_GetCurrentAudioDriver:CString(  )
Function SDL_OpenAudio:Int( desired:SDL_AudioSpec Ptr, obtained:SDL_AudioSpec Ptr )
Alias SDL_AudioDeviceID:Uint32
Function SDL_GetNumAudioDevices:Int( iscapture:Int )
Function SDL_GetAudioDeviceName:CString( index:Int, iscapture:Int )
Function SDL_GetAudioDeviceSpec:Int( index:Int, iscapture:Int, spec:SDL_AudioSpec Ptr )
Function SDL_OpenAudioDevice:SDL_AudioDeviceID( device:CString, iscapture:Int, desired:SDL_AudioSpec Ptr, obtained:SDL_AudioSpec Ptr, allowed_changes:Int )
Enum SDL_AudioStatus
End
Const SDL_AUDIO_STOPPED:SDL_AudioStatus
Const SDL_AUDIO_PLAYING:SDL_AudioStatus
Const SDL_AUDIO_PAUSED:SDL_AudioStatus
Function SDL_GetAudioStatus:SDL_AudioStatus(  )
Function SDL_GetAudioDeviceStatus:SDL_AudioStatus( dev:SDL_AudioDeviceID )
Function SDL_PauseAudio:Void( pause_on:Int )
Function SDL_PauseAudioDevice:Void( dev:SDL_AudioDeviceID, pause_on:Int )
Function SDL_LoadWAV_RW:SDL_AudioSpec Ptr( src:SDL_RWops Ptr, freesrc:Int, spec:SDL_AudioSpec Ptr, audio_buf:Uint8 Ptr Ptr, audio_len:Uint32 Ptr )
Function SDL_FreeWAV:Void( audio_buf:Uint8 Ptr )
Function SDL_BuildAudioCVT:Int( cvt:SDL_AudioCVT Ptr, src_format:SDL_AudioFormat, src_channels:Uint8, src_rate:Int, dst_format:SDL_AudioFormat, dst_channels:Uint8, dst_rate:Int )
Function SDL_ConvertAudio:Int( cvt:SDL_AudioCVT Ptr )
Alias SDL_AudioStream:_SDL_AudioStream
Function SDL_NewAudioStream:SDL_AudioStream Ptr( src_format:SDL_AudioFormat, src_channels:Uint8, src_rate:Int, dst_format:SDL_AudioFormat, dst_channels:Uint8, dst_rate:Int )
Function SDL_AudioStreamPut:Int( stream:SDL_AudioStream Ptr, buf:Void Ptr, len:Int )
Function SDL_AudioStreamGet:Int( stream:SDL_AudioStream Ptr, buf:Void Ptr, len:Int )
Function SDL_AudioStreamAvailable:Int( stream:SDL_AudioStream Ptr )
Function SDL_AudioStreamFlush:Int( stream:SDL_AudioStream Ptr )
Function SDL_AudioStreamClear:Void( stream:SDL_AudioStream Ptr )
Function SDL_FreeAudioStream:Void( stream:SDL_AudioStream Ptr )
Function SDL_MixAudio:Void( dst:Uint8 Ptr, src:Uint8 Ptr, len:Uint32, volume:Int )
Function SDL_MixAudioFormat:Void( dst:Uint8 Ptr, src:Uint8 Ptr, format:SDL_AudioFormat, len:Uint32, volume:Int )
Function SDL_QueueAudio:Int( dev:SDL_AudioDeviceID, data:Void Ptr, len:Uint32 )
Function SDL_DequeueAudio:Uint32( dev:SDL_AudioDeviceID, data:Void Ptr, len:Uint32 )
Function SDL_GetQueuedAudioSize:Uint32( dev:SDL_AudioDeviceID )
Function SDL_ClearQueuedAudio:Void( dev:SDL_AudioDeviceID )
Function SDL_LockAudio:Void(  )
Function SDL_LockAudioDevice:Void( dev:SDL_AudioDeviceID )
Function SDL_UnlockAudio:Void(  )
Function SDL_UnlockAudioDevice:Void( dev:SDL_AudioDeviceID )
Function SDL_CloseAudio:Void(  )
Function SDL_CloseAudioDevice:Void( dev:SDL_AudioDeviceID )

'***** File: include/SDL2/SDL_clipboard.h *****

Function SDL_SetClipboardText:Int( text:CString )
Function SDL_GetClipboardText:libc.char_t Ptr(  )
Function SDL_HasClipboardText:SDL_bool(  )

'***** File: include/SDL2/SDL_cpuinfo.h *****

Function SDL_GetCPUCount:Int(  )
Function SDL_GetCPUCacheLineSize:Int(  )
Function SDL_HasRDTSC:SDL_bool(  )
Function SDL_HasAltiVec:SDL_bool(  )
Function SDL_HasMMX:SDL_bool(  )
Function SDL_Has3DNow:SDL_bool(  )
Function SDL_HasSSE:SDL_bool(  )
Function SDL_HasSSE2:SDL_bool(  )
Function SDL_HasSSE3:SDL_bool(  )
Function SDL_HasSSE41:SDL_bool(  )
Function SDL_HasSSE42:SDL_bool(  )
Function SDL_HasAVX:SDL_bool(  )
Function SDL_HasAVX2:SDL_bool(  )
Function SDL_HasAVX512F:SDL_bool(  )
Function SDL_HasARMSIMD:SDL_bool(  )
Function SDL_HasNEON:SDL_bool(  )
Function SDL_GetSystemRAM:Int(  )
Function SDL_SIMDGetAlignment:libc.size_t(  )
Function SDL_SIMDAlloc:Void Ptr( len:libc.size_t )
Function SDL_SIMDRealloc:Void Ptr( mem:Void Ptr, len:libc.size_t )
Function SDL_SIMDFree:Void( ptr_:Void Ptr )

'***** File: include/SDL2/SDL_pixels.h *****

Enum SDL_PixelType
End
Const SDL_PIXELTYPE_UNKNOWN:SDL_PixelType
Const SDL_PIXELTYPE_INDEX1:SDL_PixelType
Const SDL_PIXELTYPE_INDEX4:SDL_PixelType
Const SDL_PIXELTYPE_INDEX8:SDL_PixelType
Const SDL_PIXELTYPE_PACKED8:SDL_PixelType
Const SDL_PIXELTYPE_PACKED16:SDL_PixelType
Const SDL_PIXELTYPE_PACKED32:SDL_PixelType
Const SDL_PIXELTYPE_ARRAYU8:SDL_PixelType
Const SDL_PIXELTYPE_ARRAYU16:SDL_PixelType
Const SDL_PIXELTYPE_ARRAYU32:SDL_PixelType
Const SDL_PIXELTYPE_ARRAYF16:SDL_PixelType
Const SDL_PIXELTYPE_ARRAYF32:SDL_PixelType
Enum SDL_BitmapOrder
End
Const SDL_BITMAPORDER_NONE:SDL_BitmapOrder
Const SDL_BITMAPORDER_4321:SDL_BitmapOrder
Const SDL_BITMAPORDER_1234:SDL_BitmapOrder
Enum SDL_PackedOrder
End
Const SDL_PACKEDORDER_NONE:SDL_PackedOrder
Const SDL_PACKEDORDER_XRGB:SDL_PackedOrder
Const SDL_PACKEDORDER_RGBX:SDL_PackedOrder
Const SDL_PACKEDORDER_ARGB:SDL_PackedOrder
Const SDL_PACKEDORDER_RGBA:SDL_PackedOrder
Const SDL_PACKEDORDER_XBGR:SDL_PackedOrder
Const SDL_PACKEDORDER_BGRX:SDL_PackedOrder
Const SDL_PACKEDORDER_ABGR:SDL_PackedOrder
Const SDL_PACKEDORDER_BGRA:SDL_PackedOrder
Enum SDL_ArrayOrder
End
Const SDL_ARRAYORDER_NONE:SDL_ArrayOrder
Const SDL_ARRAYORDER_RGB:SDL_ArrayOrder
Const SDL_ARRAYORDER_RGBA:SDL_ArrayOrder
Const SDL_ARRAYORDER_ARGB:SDL_ArrayOrder
Const SDL_ARRAYORDER_BGR:SDL_ArrayOrder
Const SDL_ARRAYORDER_BGRA:SDL_ArrayOrder
Const SDL_ARRAYORDER_ABGR:SDL_ArrayOrder
Enum SDL_PackedLayout
End
Const SDL_PACKEDLAYOUT_NONE:SDL_PackedLayout
Const SDL_PACKEDLAYOUT_332:SDL_PackedLayout
Const SDL_PACKEDLAYOUT_4444:SDL_PackedLayout
Const SDL_PACKEDLAYOUT_1555:SDL_PackedLayout
Const SDL_PACKEDLAYOUT_5551:SDL_PackedLayout
Const SDL_PACKEDLAYOUT_565:SDL_PackedLayout
Const SDL_PACKEDLAYOUT_8888:SDL_PackedLayout
Const SDL_PACKEDLAYOUT_2101010:SDL_PackedLayout
Const SDL_PACKEDLAYOUT_1010102:SDL_PackedLayout
Enum SDL_PixelFormatEnum
End
Const SDL_PIXELFORMAT_UNKNOWN:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_INDEX1LSB:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_INDEX1MSB:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_INDEX4LSB:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_INDEX4MSB:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_INDEX8:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_RGB332:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_XRGB4444:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_RGB444:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_XBGR4444:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_BGR444:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_XRGB1555:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_RGB555:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_XBGR1555:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_BGR555:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_ARGB4444:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_RGBA4444:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_ABGR4444:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_BGRA4444:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_ARGB1555:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_RGBA5551:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_ABGR1555:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_BGRA5551:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_RGB565:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_BGR565:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_RGB24:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_BGR24:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_XRGB8888:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_RGB888:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_RGBX8888:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_XBGR8888:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_BGR888:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_BGRX8888:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_ARGB8888:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_RGBA8888:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_ABGR8888:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_BGRA8888:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_ARGB2101010:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_RGBA32:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_ARGB32:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_BGRA32:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_ABGR32:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_YV12:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_IYUV:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_YUY2:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_UYVY:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_YVYU:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_NV12:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_NV21:SDL_PixelFormatEnum
Const SDL_PIXELFORMAT_EXTERNAL_OES:SDL_PixelFormatEnum
Struct SDL_Color
	Field r:Uint8
	Field g:Uint8
	Field b:Uint8
	Field a:Uint8
End
Struct SDL_Palette
	Field ncolors:Int
	Field colors:SDL_Color Ptr
	Field version:Uint32
	Field refcount:Int
End
Struct SDL_PixelFormat
	Field format:Uint32
	Field palette:SDL_Palette Ptr
	Field BitsPerPixel:Uint8
	Field BytesPerPixel:Uint8
	Field padding:Uint8 Ptr
	Field Rmask:Uint32
	Field Gmask:Uint32
	Field Bmask:Uint32
	Field Amask:Uint32
	Field Rloss:Uint8
	Field Gloss:Uint8
	Field Bloss:Uint8
	Field Aloss:Uint8
	Field Rshift:Uint8
	Field Gshift:Uint8
	Field Bshift:Uint8
	Field Ashift:Uint8
	Field refcount:Int
	Field next_:SDL_PixelFormat Ptr
End
Function SDL_GetPixelFormatName:CString( format:Uint32 )
Function SDL_PixelFormatEnumToMasks:SDL_bool( format:Uint32, bpp:Int Ptr, Rmask:Uint32 Ptr, Gmask:Uint32 Ptr, Bmask:Uint32 Ptr, Amask:Uint32 Ptr )
Function SDL_MasksToPixelFormatEnum:Uint32( bpp:Int, Rmask:Uint32, Gmask:Uint32, Bmask:Uint32, Amask:Uint32 )
Function SDL_AllocFormat:SDL_PixelFormat Ptr( pixel_format:Uint32 )
Function SDL_FreeFormat:Void( format:SDL_PixelFormat Ptr )
Function SDL_AllocPalette:SDL_Palette Ptr( ncolors:Int )
Function SDL_SetPixelFormatPalette:Int( format:SDL_PixelFormat Ptr, palette:SDL_Palette Ptr )
Function SDL_SetPaletteColors:Int( palette:SDL_Palette Ptr, colors:SDL_Color Ptr, firstcolor:Int, ncolors:Int )
Function SDL_FreePalette:Void( palette:SDL_Palette Ptr )
Function SDL_MapRGB:Uint32( format:SDL_PixelFormat Ptr, r:Uint8, g:Uint8, b:Uint8 )
Function SDL_MapRGBA:Uint32( format:SDL_PixelFormat Ptr, r:Uint8, g:Uint8, b:Uint8, a:Uint8 )
Function SDL_GetRGB:Void( pixel:Uint32, format:SDL_PixelFormat Ptr, r:Uint8 Ptr, g:Uint8 Ptr, b:Uint8 Ptr )
Function SDL_GetRGBA:Void( pixel:Uint32, format:SDL_PixelFormat Ptr, r:Uint8 Ptr, g:Uint8 Ptr, b:Uint8 Ptr, a:Uint8 Ptr )
Function SDL_CalculateGammaRamp:Void( gamma:Float, ramp:Uint16 Ptr )

'***** File: include/SDL2/SDL_rect.h *****

Struct SDL_Point
	Field x:Int
	Field y:Int
End
Struct SDL_FPoint
	Field x:Float
	Field y:Float
End
Struct SDL_Rect
	Field x:Int
	Field y:Int
	Field w:Int
	Field h:Int
End
Struct SDL_FRect
	Field x:Float
	Field y:Float
	Field w:Float
	Field h:Float
End
Function SDL_PointInRect:SDL_bool( p:SDL_Point Ptr, r:SDL_Rect Ptr )
Function SDL_RectEmpty:SDL_bool( r:SDL_Rect Ptr )
Function SDL_RectEquals:SDL_bool( a:SDL_Rect Ptr, b:SDL_Rect Ptr )
Function SDL_HasIntersection:SDL_bool( A:SDL_Rect Ptr, B:SDL_Rect Ptr )
Function SDL_IntersectRect:SDL_bool( A:SDL_Rect Ptr, B:SDL_Rect Ptr, result:SDL_Rect Ptr )
Function SDL_UnionRect:Void( A:SDL_Rect Ptr, B:SDL_Rect Ptr, result:SDL_Rect Ptr )
Function SDL_EnclosePoints:SDL_bool( points:SDL_Point Ptr, count:Int, clip:SDL_Rect Ptr, result:SDL_Rect Ptr )
Function SDL_IntersectRectAndLine:SDL_bool( rect:SDL_Rect Ptr, X1:Int Ptr, Y1:Int Ptr, X2:Int Ptr, Y2:Int Ptr )
Function SDL_PointInFRect:SDL_bool( p:SDL_FPoint Ptr, r:SDL_FRect Ptr )
Function SDL_FRectEmpty:SDL_bool( r:SDL_FRect Ptr )
Function SDL_FRectEquals:SDL_bool( a:SDL_FRect Ptr, b:SDL_FRect Ptr )
Function SDL_HasIntersectionF:SDL_bool( A:SDL_FRect Ptr, B:SDL_FRect Ptr )
Function SDL_IntersectFRect:SDL_bool( A:SDL_FRect Ptr, B:SDL_FRect Ptr, result:SDL_FRect Ptr )
Function SDL_UnionFRect:Void( A:SDL_FRect Ptr, B:SDL_FRect Ptr, result:SDL_FRect Ptr )
Function SDL_EncloseFPoints:SDL_bool( points:SDL_FPoint Ptr, count:Int, clip:SDL_FRect Ptr, result:SDL_FRect Ptr )
Function SDL_IntersectFRectAndLine:SDL_bool( rect:SDL_FRect Ptr, X1:Float Ptr, Y1:Float Ptr, X2:Float Ptr, Y2:Float Ptr )

'***** File: include/SDL2/SDL_blendmode.h *****

Enum SDL_BlendMode
End
Const SDL_BLENDMODE_NONE:SDL_BlendMode
Const SDL_BLENDMODE_BLEND:SDL_BlendMode
Const SDL_BLENDMODE_ADD:SDL_BlendMode
Const SDL_BLENDMODE_MOD:SDL_BlendMode
Const SDL_BLENDMODE_MUL:SDL_BlendMode
Const SDL_BLENDMODE_INVALID:SDL_BlendMode
Enum SDL_BlendOperation
End
Const SDL_BLENDOPERATION_ADD:SDL_BlendOperation
Const SDL_BLENDOPERATION_SUBTRACT:SDL_BlendOperation
Const SDL_BLENDOPERATION_REV_SUBTRACT:SDL_BlendOperation
Const SDL_BLENDOPERATION_MINIMUM:SDL_BlendOperation
Const SDL_BLENDOPERATION_MAXIMUM:SDL_BlendOperation
Enum SDL_BlendFactor
End
Const SDL_BLENDFACTOR_ZERO:SDL_BlendFactor
Const SDL_BLENDFACTOR_ONE:SDL_BlendFactor
Const SDL_BLENDFACTOR_SRC_COLOR:SDL_BlendFactor
Const SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR:SDL_BlendFactor
Const SDL_BLENDFACTOR_SRC_ALPHA:SDL_BlendFactor
Const SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA:SDL_BlendFactor
Const SDL_BLENDFACTOR_DST_COLOR:SDL_BlendFactor
Const SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR:SDL_BlendFactor
Const SDL_BLENDFACTOR_DST_ALPHA:SDL_BlendFactor
Const SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA:SDL_BlendFactor
Function SDL_ComposeCustomBlendMode:SDL_BlendMode( srcColorFactor:SDL_BlendFactor, dstColorFactor:SDL_BlendFactor, colorOperation:SDL_BlendOperation, srcAlphaFactor:SDL_BlendFactor, dstAlphaFactor:SDL_BlendFactor, alphaOperation:SDL_BlendOperation )

'***** File: include/SDL2/SDL_surface.h *****

Struct SDL_Surface
	Field flags:Uint32
	Field format:SDL_PixelFormat Ptr
	Field w:Int
	Field h:Int
	Field pitch:Int
	Field pixels:Void Ptr
	Field userdata:Void Ptr
	Field locked:Int
	Field list_blitmap:Void Ptr
	Field clip_rect:SDL_Rect
	Field map:Void Ptr 'SDL_BlitMap Ptr
	Field refcount:Int
End
Alias SDL_blit:Int( SDL_Surface Ptr, SDL_Rect Ptr, SDL_Surface Ptr, SDL_Rect Ptr )
Enum SDL_YUV_CONVERSION_MODE
End
Const SDL_YUV_CONVERSION_JPEG:SDL_YUV_CONVERSION_MODE
Const SDL_YUV_CONVERSION_BT601:SDL_YUV_CONVERSION_MODE
Const SDL_YUV_CONVERSION_BT709:SDL_YUV_CONVERSION_MODE
Const SDL_YUV_CONVERSION_AUTOMATIC:SDL_YUV_CONVERSION_MODE
Function SDL_CreateRGBSurface:SDL_Surface Ptr( flags:Uint32, width:Int, height:Int, depth:Int, Rmask:Uint32, Gmask:Uint32, Bmask:Uint32, Amask:Uint32 )
Function SDL_CreateRGBSurfaceWithFormat:SDL_Surface Ptr( flags:Uint32, width:Int, height:Int, depth:Int, format:Uint32 )
Function SDL_CreateRGBSurfaceFrom:SDL_Surface Ptr( pixels:Void Ptr, width:Int, height:Int, depth:Int, pitch:Int, Rmask:Uint32, Gmask:Uint32, Bmask:Uint32, Amask:Uint32 )
Function SDL_CreateRGBSurfaceWithFormatFrom:SDL_Surface Ptr( pixels:Void Ptr, width:Int, height:Int, depth:Int, pitch:Int, format:Uint32 )
Function SDL_FreeSurface:Void( surface:SDL_Surface Ptr )
Function SDL_SetSurfacePalette:Int( surface:SDL_Surface Ptr, palette:SDL_Palette Ptr )
Function SDL_LockSurface:Int( surface:SDL_Surface Ptr )
Function SDL_UnlockSurface:Void( surface:SDL_Surface Ptr )
Function SDL_LoadBMP_RW:SDL_Surface Ptr( src:SDL_RWops Ptr, freesrc:Int )
Function SDL_SaveBMP_RW:Int( surface:SDL_Surface Ptr, dst:SDL_RWops Ptr, freedst:Int )
Function SDL_SetSurfaceRLE:Int( surface:SDL_Surface Ptr, flag:Int )
Function SDL_HasSurfaceRLE:SDL_bool( surface:SDL_Surface Ptr )
Function SDL_SetColorKey:Int( surface:SDL_Surface Ptr, flag:Int, key:Uint32 )
Function SDL_HasColorKey:SDL_bool( surface:SDL_Surface Ptr )
Function SDL_GetColorKey:Int( surface:SDL_Surface Ptr, key:Uint32 Ptr )
Function SDL_SetSurfaceColorMod:Int( surface:SDL_Surface Ptr, r:Uint8, g:Uint8, b:Uint8 )
Function SDL_GetSurfaceColorMod:Int( surface:SDL_Surface Ptr, r:Uint8 Ptr, g:Uint8 Ptr, b:Uint8 Ptr )
Function SDL_SetSurfaceAlphaMod:Int( surface:SDL_Surface Ptr, alpha:Uint8 )
Function SDL_GetSurfaceAlphaMod:Int( surface:SDL_Surface Ptr, alpha:Uint8 Ptr )
Function SDL_SetSurfaceBlendMode:Int( surface:SDL_Surface Ptr, blendMode:SDL_BlendMode )
Function SDL_GetSurfaceBlendMode:Int( surface:SDL_Surface Ptr, blendMode:SDL_BlendMode Ptr )
Function SDL_SetClipRect:SDL_bool( surface:SDL_Surface Ptr, rect:SDL_Rect Ptr )
Function SDL_GetClipRect:Void( surface:SDL_Surface Ptr, rect:SDL_Rect Ptr )
Function SDL_DuplicateSurface:SDL_Surface Ptr( surface:SDL_Surface Ptr )
Function SDL_ConvertSurface:SDL_Surface Ptr( src:SDL_Surface Ptr, fmt:SDL_PixelFormat Ptr, flags:Uint32 )
Function SDL_ConvertSurfaceFormat:SDL_Surface Ptr( src:SDL_Surface Ptr, pixel_format:Uint32, flags:Uint32 )
Function SDL_ConvertPixels:Int( width:Int, height:Int, src_format:Uint32, src:Void Ptr, src_pitch:Int, dst_format:Uint32, dst:Void Ptr, dst_pitch:Int )
Function SDL_PremultiplyAlpha:Int( width:Int, height:Int, src_format:Uint32, src:Void Ptr, src_pitch:Int, dst_format:Uint32, dst:Void Ptr, dst_pitch:Int )
Function SDL_FillRect:Int( dst:SDL_Surface Ptr, rect:SDL_Rect Ptr, color:Uint32 )
Function SDL_FillRects:Int( dst:SDL_Surface Ptr, rects:SDL_Rect Ptr, count:Int, color:Uint32 )
Function SDL_UpperBlit:Int( src:SDL_Surface Ptr, srcrect:SDL_Rect Ptr, dst:SDL_Surface Ptr, dstrect:SDL_Rect Ptr )
Function SDL_LowerBlit:Int( src:SDL_Surface Ptr, srcrect:SDL_Rect Ptr, dst:SDL_Surface Ptr, dstrect:SDL_Rect Ptr )
Function SDL_SoftStretch:Int( src:SDL_Surface Ptr, srcrect:SDL_Rect Ptr, dst:SDL_Surface Ptr, dstrect:SDL_Rect Ptr )
Function SDL_SoftStretchLinear:Int( src:SDL_Surface Ptr, srcrect:SDL_Rect Ptr, dst:SDL_Surface Ptr, dstrect:SDL_Rect Ptr )
Function SDL_UpperBlitScaled:Int( src:SDL_Surface Ptr, srcrect:SDL_Rect Ptr, dst:SDL_Surface Ptr, dstrect:SDL_Rect Ptr )
Function SDL_LowerBlitScaled:Int( src:SDL_Surface Ptr, srcrect:SDL_Rect Ptr, dst:SDL_Surface Ptr, dstrect:SDL_Rect Ptr )
Function SDL_SetYUVConversionMode:Void( mode:SDL_YUV_CONVERSION_MODE )
Function SDL_GetYUVConversionMode:SDL_YUV_CONVERSION_MODE(  )
Function SDL_GetYUVConversionModeForResolution:SDL_YUV_CONVERSION_MODE( width:Int, height:Int )

'***** File: include/SDL2/SDL_video.h *****

Struct SDL_DisplayMode
	Field format:Uint32
	Field w:Int
	Field h:Int
	Field refresh_rate:Int
	Field driverdata:Void Ptr
End
Enum SDL_WindowFlags
End
Const SDL_WINDOW_FULLSCREEN:SDL_WindowFlags
Const SDL_WINDOW_OPENGL:SDL_WindowFlags
Const SDL_WINDOW_SHOWN:SDL_WindowFlags
Const SDL_WINDOW_HIDDEN:SDL_WindowFlags
Const SDL_WINDOW_BORDERLESS:SDL_WindowFlags
Const SDL_WINDOW_RESIZABLE:SDL_WindowFlags
Const SDL_WINDOW_MINIMIZED:SDL_WindowFlags
Const SDL_WINDOW_MAXIMIZED:SDL_WindowFlags
Const SDL_WINDOW_MOUSE_GRABBED:SDL_WindowFlags
Const SDL_WINDOW_INPUT_FOCUS:SDL_WindowFlags
Const SDL_WINDOW_MOUSE_FOCUS:SDL_WindowFlags
Const SDL_WINDOW_FULLSCREEN_DESKTOP:SDL_WindowFlags
Const SDL_WINDOW_FOREIGN:SDL_WindowFlags
Const SDL_WINDOW_ALLOW_HIGHDPI:SDL_WindowFlags
Const SDL_WINDOW_MOUSE_CAPTURE:SDL_WindowFlags
Const SDL_WINDOW_ALWAYS_ON_TOP:SDL_WindowFlags
Const SDL_WINDOW_SKIP_TASKBAR:SDL_WindowFlags
Const SDL_WINDOW_UTILITY:SDL_WindowFlags
Const SDL_WINDOW_TOOLTIP:SDL_WindowFlags
Const SDL_WINDOW_POPUP_MENU:SDL_WindowFlags
Const SDL_WINDOW_KEYBOARD_GRABBED:SDL_WindowFlags
Const SDL_WINDOW_VULKAN:SDL_WindowFlags
Const SDL_WINDOW_METAL:SDL_WindowFlags
Const SDL_WINDOW_INPUT_GRABBED:SDL_WindowFlags

Const SDL_WINDOWPOS_UNDEFINED_MASK:Int
Const SDL_WINDOWPOS_UNDEFINED_DISPLAY:Int
Const SDL_WINDOWPOS_UNDEFINED:Int
Const SDL_WINDOWPOS_ISUNDEFINED:Int

Const SDL_WINDOWPOS_CENTERED_MASK:Int
Const SDL_WINDOWPOS_CENTERED_DISPLAY:Int
Const SDL_WINDOWPOS_CENTERED:Int
Const SDL_WINDOWPOS_ISCENTERED:Int

Enum SDL_WindowEventID
End
Const SDL_WINDOWEVENT_NONE:SDL_WindowEventID
Const SDL_WINDOWEVENT_SHOWN:SDL_WindowEventID
Const SDL_WINDOWEVENT_HIDDEN:SDL_WindowEventID
Const SDL_WINDOWEVENT_EXPOSED:SDL_WindowEventID
Const SDL_WINDOWEVENT_MOVED:SDL_WindowEventID
Const SDL_WINDOWEVENT_RESIZED:SDL_WindowEventID
Const SDL_WINDOWEVENT_SIZE_CHANGED:SDL_WindowEventID
Const SDL_WINDOWEVENT_MINIMIZED:SDL_WindowEventID
Const SDL_WINDOWEVENT_MAXIMIZED:SDL_WindowEventID
Const SDL_WINDOWEVENT_RESTORED:SDL_WindowEventID
Const SDL_WINDOWEVENT_ENTER:SDL_WindowEventID
Const SDL_WINDOWEVENT_LEAVE:SDL_WindowEventID
Const SDL_WINDOWEVENT_FOCUS_GAINED:SDL_WindowEventID
Const SDL_WINDOWEVENT_FOCUS_LOST:SDL_WindowEventID
Const SDL_WINDOWEVENT_CLOSE:SDL_WindowEventID
Const SDL_WINDOWEVENT_TAKE_FOCUS:SDL_WindowEventID
Const SDL_WINDOWEVENT_HIT_TEST:SDL_WindowEventID
Const SDL_WINDOWEVENT_ICCPROF_CHANGED:SDL_WindowEventID
Const SDL_WINDOWEVENT_DISPLAY_CHANGED:SDL_WindowEventID
Enum SDL_DisplayEventID
End
Const SDL_DISPLAYEVENT_NONE:SDL_DisplayEventID
Const SDL_DISPLAYEVENT_ORIENTATION:SDL_DisplayEventID
Const SDL_DISPLAYEVENT_CONNECTED:SDL_DisplayEventID
Const SDL_DISPLAYEVENT_DISCONNECTED:SDL_DisplayEventID
Enum SDL_DisplayOrientation
End
Const SDL_ORIENTATION_UNKNOWN:SDL_DisplayOrientation
Const SDL_ORIENTATION_LANDSCAPE:SDL_DisplayOrientation
Const SDL_ORIENTATION_LANDSCAPE_FLIPPED:SDL_DisplayOrientation
Const SDL_ORIENTATION_PORTRAIT:SDL_DisplayOrientation
Const SDL_ORIENTATION_PORTRAIT_FLIPPED:SDL_DisplayOrientation
Enum SDL_FlashOperation
End
Const SDL_FLASH_CANCEL:SDL_FlashOperation
Const SDL_FLASH_BRIEFLY:SDL_FlashOperation
Const SDL_FLASH_UNTIL_FOCUSED:SDL_FlashOperation
Alias SDL_GLContext:Void Ptr
Enum SDL_GLattr
End
Const SDL_GL_RED_SIZE:SDL_GLattr
Const SDL_GL_GREEN_SIZE:SDL_GLattr
Const SDL_GL_BLUE_SIZE:SDL_GLattr
Const SDL_GL_ALPHA_SIZE:SDL_GLattr
Const SDL_GL_BUFFER_SIZE:SDL_GLattr
Const SDL_GL_DOUBLEBUFFER:SDL_GLattr
Const SDL_GL_DEPTH_SIZE:SDL_GLattr
Const SDL_GL_STENCIL_SIZE:SDL_GLattr
Const SDL_GL_ACCUM_RED_SIZE:SDL_GLattr
Const SDL_GL_ACCUM_GREEN_SIZE:SDL_GLattr
Const SDL_GL_ACCUM_BLUE_SIZE:SDL_GLattr
Const SDL_GL_ACCUM_ALPHA_SIZE:SDL_GLattr
Const SDL_GL_STEREO:SDL_GLattr
Const SDL_GL_MULTISAMPLEBUFFERS:SDL_GLattr
Const SDL_GL_MULTISAMPLESAMPLES:SDL_GLattr
Const SDL_GL_ACCELERATED_VISUAL:SDL_GLattr
Const SDL_GL_RETAINED_BACKING:SDL_GLattr
Const SDL_GL_CONTEXT_MAJOR_VERSION:SDL_GLattr
Const SDL_GL_CONTEXT_MINOR_VERSION:SDL_GLattr
Const SDL_GL_CONTEXT_EGL:SDL_GLattr
Const SDL_GL_CONTEXT_FLAGS:SDL_GLattr
Const SDL_GL_CONTEXT_PROFILE_MASK:SDL_GLattr
Const SDL_GL_SHARE_WITH_CURRENT_CONTEXT:SDL_GLattr
Const SDL_GL_FRAMEBUFFER_SRGB_CAPABLE:SDL_GLattr
Const SDL_GL_CONTEXT_RELEASE_BEHAVIOR:SDL_GLattr
Const SDL_GL_CONTEXT_RESET_NOTIFICATION:SDL_GLattr
Const SDL_GL_CONTEXT_NO_ERROR:SDL_GLattr
Enum SDL_GLprofile
End
Const SDL_GL_CONTEXT_PROFILE_CORE:SDL_GLprofile
Const SDL_GL_CONTEXT_PROFILE_COMPATIBILITY:SDL_GLprofile
Const SDL_GL_CONTEXT_PROFILE_ES:SDL_GLprofile
Enum SDL_GLcontextFlag
End
Const SDL_GL_CONTEXT_DEBUG_FLAG:SDL_GLcontextFlag
Const SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG:SDL_GLcontextFlag
Const SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG:SDL_GLcontextFlag
Const SDL_GL_CONTEXT_RESET_ISOLATION_FLAG:SDL_GLcontextFlag
Enum SDL_GLcontextReleaseFlag
End
Const SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE:SDL_GLcontextReleaseFlag
Const SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH:SDL_GLcontextReleaseFlag
Enum SDL_GLContextResetNotification
End
Const SDL_GL_CONTEXT_RESET_NO_NOTIFICATION:SDL_GLContextResetNotification
Const SDL_GL_CONTEXT_RESET_LOSE_CONTEXT:SDL_GLContextResetNotification
Function SDL_GetNumVideoDrivers:Int(  )
Function SDL_GetVideoDriver:CString( index:Int )
Function SDL_VideoInit:Int( driver_name:CString )
Function SDL_VideoQuit:Void(  )
Function SDL_GetCurrentVideoDriver:CString(  )
Function SDL_GetNumVideoDisplays:Int(  )
Function SDL_GetDisplayName:CString( displayIndex:Int )
Function SDL_GetDisplayBounds:Int( displayIndex:Int, rect:SDL_Rect Ptr )
Function SDL_GetDisplayUsableBounds:Int( displayIndex:Int, rect:SDL_Rect Ptr )
Function SDL_GetDisplayDPI:Int( displayIndex:Int, ddpi:Float Ptr, hdpi:Float Ptr, vdpi:Float Ptr )
Function SDL_GetDisplayOrientation:SDL_DisplayOrientation( displayIndex:Int )
Function SDL_GetNumDisplayModes:Int( displayIndex:Int )
Function SDL_GetDisplayMode:Int( displayIndex:Int, modeIndex:Int, mode:SDL_DisplayMode Ptr )
Function SDL_GetDesktopDisplayMode:Int( displayIndex:Int, mode:SDL_DisplayMode Ptr )
Function SDL_GetCurrentDisplayMode:Int( displayIndex:Int, mode:SDL_DisplayMode Ptr )
Function SDL_GetClosestDisplayMode:SDL_DisplayMode Ptr( displayIndex:Int, mode:SDL_DisplayMode Ptr, closest:SDL_DisplayMode Ptr )
Function SDL_GetWindowDisplayIndex:Int( window:SDL_Window Ptr )
Function SDL_SetWindowDisplayMode:Int( window:SDL_Window Ptr, mode:SDL_DisplayMode Ptr )
Function SDL_GetWindowDisplayMode:Int( window:SDL_Window Ptr, mode:SDL_DisplayMode Ptr )
Function SDL_GetWindowICCProfile:Void Ptr( window:SDL_Window Ptr, size:libc.size_t Ptr )
Function SDL_GetWindowPixelFormat:Uint32( window:SDL_Window Ptr )
Function SDL_CreateWindow:SDL_Window Ptr( title:CString, x:Int, y:Int, w:Int, h:Int, flags:Uint32 )
Function SDL_CreateWindowFrom:SDL_Window Ptr( data:Void Ptr )
Function SDL_GetWindowID:Uint32( window:SDL_Window Ptr )
Function SDL_GetWindowFromID:SDL_Window Ptr( id:Uint32 )
Function SDL_GetWindowFlags:Uint32( window:SDL_Window Ptr )
Function SDL_SetWindowTitle:Void( window:SDL_Window Ptr, title:CString )
Function SDL_GetWindowTitle:CString( window:SDL_Window Ptr )
Function SDL_SetWindowIcon:Void( window:SDL_Window Ptr, icon:SDL_Surface Ptr )
Function SDL_SetWindowData:Void Ptr( window:SDL_Window Ptr, name:CString, userdata:Void Ptr )
Function SDL_GetWindowData:Void Ptr( window:SDL_Window Ptr, name:CString )
Function SDL_SetWindowPosition:Void( window:SDL_Window Ptr, x:Int, y:Int )
Function SDL_GetWindowPosition:Void( window:SDL_Window Ptr, x:Int Ptr, y:Int Ptr )
Function SDL_SetWindowSize:Void( window:SDL_Window Ptr, w:Int, h:Int )
Function SDL_GetWindowSize:Void( window:SDL_Window Ptr, w:Int Ptr, h:Int Ptr )
Function SDL_GetWindowBordersSize:Int( window:SDL_Window Ptr, top:Int Ptr, left:Int Ptr, bottom:Int Ptr, right:Int Ptr )
Function SDL_SetWindowMinimumSize:Void( window:SDL_Window Ptr, min_w:Int, min_h:Int )
Function SDL_GetWindowMinimumSize:Void( window:SDL_Window Ptr, w:Int Ptr, h:Int Ptr )
Function SDL_SetWindowMaximumSize:Void( window:SDL_Window Ptr, max_w:Int, max_h:Int )
Function SDL_GetWindowMaximumSize:Void( window:SDL_Window Ptr, w:Int Ptr, h:Int Ptr )
Function SDL_SetWindowBordered:Void( window:SDL_Window Ptr, bordered:SDL_bool )
Function SDL_SetWindowResizable:Void( window:SDL_Window Ptr, resizable:SDL_bool )
Function SDL_SetWindowAlwaysOnTop:Void( window:SDL_Window Ptr, on_top:SDL_bool )
Function SDL_ShowWindow:Void( window:SDL_Window Ptr )
Function SDL_HideWindow:Void( window:SDL_Window Ptr )
Function SDL_RaiseWindow:Void( window:SDL_Window Ptr )
Function SDL_MaximizeWindow:Void( window:SDL_Window Ptr )
Function SDL_MinimizeWindow:Void( window:SDL_Window Ptr )
Function SDL_RestoreWindow:Void( window:SDL_Window Ptr )
Function SDL_SetWindowFullscreen:Int( window:SDL_Window Ptr, flags:Uint32 )
Function SDL_GetWindowSurface:SDL_Surface Ptr( window:SDL_Window Ptr )
Function SDL_UpdateWindowSurface:Int( window:SDL_Window Ptr )
Function SDL_UpdateWindowSurfaceRects:Int( window:SDL_Window Ptr, rects:SDL_Rect Ptr, numrects:Int )
Function SDL_SetWindowGrab:Void( window:SDL_Window Ptr, grabbed:SDL_bool )
Function SDL_SetWindowKeyboardGrab:Void( window:SDL_Window Ptr, grabbed:SDL_bool )
Function SDL_SetWindowMouseGrab:Void( window:SDL_Window Ptr, grabbed:SDL_bool )
Function SDL_GetWindowGrab:SDL_bool( window:SDL_Window Ptr )
Function SDL_GetWindowKeyboardGrab:SDL_bool( window:SDL_Window Ptr )
Function SDL_GetWindowMouseGrab:SDL_bool( window:SDL_Window Ptr )
Function SDL_GetGrabbedWindow:SDL_Window Ptr(  )
Function SDL_SetWindowMouseRect:Int( window:SDL_Window Ptr, rect:SDL_Rect Ptr )
Function SDL_GetWindowMouseRect:SDL_Rect Ptr( window:SDL_Window Ptr )
Function SDL_SetWindowBrightness:Int( window:SDL_Window Ptr, brightness:Float )
Function SDL_GetWindowBrightness:Float( window:SDL_Window Ptr )
Function SDL_SetWindowOpacity:Int( window:SDL_Window Ptr, opacity:Float )
Function SDL_GetWindowOpacity:Int( window:SDL_Window Ptr, out_opacity:Float Ptr )
Function SDL_SetWindowModalFor:Int( modal_window:SDL_Window Ptr, parent_window:SDL_Window Ptr )
Function SDL_SetWindowInputFocus:Int( window:SDL_Window Ptr )
Function SDL_SetWindowGammaRamp:Int( window:SDL_Window Ptr, red:Uint16 Ptr, green:Uint16 Ptr, blue:Uint16 Ptr )
Function SDL_GetWindowGammaRamp:Int( window:SDL_Window Ptr, red:Uint16 Ptr, green:Uint16 Ptr, blue:Uint16 Ptr )
Enum SDL_HitTestResult
End
Const SDL_HITTEST_NORMAL:SDL_HitTestResult
Const SDL_HITTEST_DRAGGABLE:SDL_HitTestResult
Const SDL_HITTEST_RESIZE_TOPLEFT:SDL_HitTestResult
Const SDL_HITTEST_RESIZE_TOP:SDL_HitTestResult
Const SDL_HITTEST_RESIZE_TOPRIGHT:SDL_HitTestResult
Const SDL_HITTEST_RESIZE_RIGHT:SDL_HitTestResult
Const SDL_HITTEST_RESIZE_BOTTOMRIGHT:SDL_HitTestResult
Const SDL_HITTEST_RESIZE_BOTTOM:SDL_HitTestResult
Const SDL_HITTEST_RESIZE_BOTTOMLEFT:SDL_HitTestResult
Const SDL_HITTEST_RESIZE_LEFT:SDL_HitTestResult
Alias SDL_HitTest:SDL_HitTestResult( SDL_Window Ptr, SDL_Point Ptr, Void Ptr )
Function SDL_SetWindowHitTest:Int( window:SDL_Window Ptr, callback:SDL_HitTest, callback_data:Void Ptr )
Function SDL_FlashWindow:Int( window:SDL_Window Ptr, operation:SDL_FlashOperation )
Function SDL_DestroyWindow:Void( window:SDL_Window Ptr )
Function SDL_IsScreenSaverEnabled:SDL_bool(  )
Function SDL_EnableScreenSaver:Void(  )
Function SDL_DisableScreenSaver:Void(  )
Function SDL_GL_LoadLibrary:Int( path:CString )
Function SDL_GL_GetProcAddress:Void Ptr( proc:CString )
Function SDL_GL_UnloadLibrary:Void(  )
Function SDL_GL_ExtensionSupported:SDL_bool( extension_:CString )
Function SDL_GL_ResetAttributes:Void(  )
Function SDL_GL_SetAttribute:Int( attr:SDL_GLattr, value:Int )
Function SDL_GL_GetAttribute:Int( attr:SDL_GLattr, value:Int Ptr )
Function SDL_GL_CreateContext:SDL_GLContext( window:SDL_Window Ptr )
Function SDL_GL_MakeCurrent:Int( window:SDL_Window Ptr, context:SDL_GLContext )
Function SDL_GL_GetCurrentWindow:SDL_Window Ptr(  )
Function SDL_GL_GetCurrentContext:SDL_GLContext(  )
Function SDL_GL_GetDrawableSize:Void( window:SDL_Window Ptr, w:Int Ptr, h:Int Ptr )
Function SDL_GL_SetSwapInterval:Int( interval:Int )
Function SDL_GL_GetSwapInterval:Int(  )
Function SDL_GL_SwapWindow:Void( window:SDL_Window Ptr )
Function SDL_GL_DeleteContext:Void( context:SDL_GLContext )

'***** File: include/SDL2/SDL_scancode.h *****

Enum SDL_Scancode
End
Const SDL_SCANCODE_UNKNOWN:SDL_Scancode
Const SDL_SCANCODE_A:SDL_Scancode
Const SDL_SCANCODE_B:SDL_Scancode
Const SDL_SCANCODE_C:SDL_Scancode
Const SDL_SCANCODE_D:SDL_Scancode
Const SDL_SCANCODE_E:SDL_Scancode
Const SDL_SCANCODE_F:SDL_Scancode
Const SDL_SCANCODE_G:SDL_Scancode
Const SDL_SCANCODE_H:SDL_Scancode
Const SDL_SCANCODE_I:SDL_Scancode
Const SDL_SCANCODE_J:SDL_Scancode
Const SDL_SCANCODE_K:SDL_Scancode
Const SDL_SCANCODE_L:SDL_Scancode
Const SDL_SCANCODE_M:SDL_Scancode
Const SDL_SCANCODE_N:SDL_Scancode
Const SDL_SCANCODE_O:SDL_Scancode
Const SDL_SCANCODE_P:SDL_Scancode
Const SDL_SCANCODE_Q:SDL_Scancode
Const SDL_SCANCODE_R:SDL_Scancode
Const SDL_SCANCODE_S:SDL_Scancode
Const SDL_SCANCODE_T:SDL_Scancode
Const SDL_SCANCODE_U:SDL_Scancode
Const SDL_SCANCODE_V:SDL_Scancode
Const SDL_SCANCODE_W:SDL_Scancode
Const SDL_SCANCODE_X:SDL_Scancode
Const SDL_SCANCODE_Y:SDL_Scancode
Const SDL_SCANCODE_Z:SDL_Scancode
Const SDL_SCANCODE_1:SDL_Scancode
Const SDL_SCANCODE_2:SDL_Scancode
Const SDL_SCANCODE_3:SDL_Scancode
Const SDL_SCANCODE_4:SDL_Scancode
Const SDL_SCANCODE_5:SDL_Scancode
Const SDL_SCANCODE_6:SDL_Scancode
Const SDL_SCANCODE_7:SDL_Scancode
Const SDL_SCANCODE_8:SDL_Scancode
Const SDL_SCANCODE_9:SDL_Scancode
Const SDL_SCANCODE_0:SDL_Scancode
Const SDL_SCANCODE_RETURN:SDL_Scancode
Const SDL_SCANCODE_ESCAPE:SDL_Scancode
Const SDL_SCANCODE_BACKSPACE:SDL_Scancode
Const SDL_SCANCODE_TAB:SDL_Scancode
Const SDL_SCANCODE_SPACE:SDL_Scancode
Const SDL_SCANCODE_MINUS:SDL_Scancode
Const SDL_SCANCODE_EQUALS:SDL_Scancode
Const SDL_SCANCODE_LEFTBRACKET:SDL_Scancode
Const SDL_SCANCODE_RIGHTBRACKET:SDL_Scancode
Const SDL_SCANCODE_BACKSLASH:SDL_Scancode
Const SDL_SCANCODE_NONUSHASH:SDL_Scancode
Const SDL_SCANCODE_SEMICOLON:SDL_Scancode
Const SDL_SCANCODE_APOSTROPHE:SDL_Scancode
Const SDL_SCANCODE_GRAVE:SDL_Scancode
Const SDL_SCANCODE_COMMA:SDL_Scancode
Const SDL_SCANCODE_PERIOD:SDL_Scancode
Const SDL_SCANCODE_SLASH:SDL_Scancode
Const SDL_SCANCODE_CAPSLOCK:SDL_Scancode
Const SDL_SCANCODE_F1:SDL_Scancode
Const SDL_SCANCODE_F2:SDL_Scancode
Const SDL_SCANCODE_F3:SDL_Scancode
Const SDL_SCANCODE_F4:SDL_Scancode
Const SDL_SCANCODE_F5:SDL_Scancode
Const SDL_SCANCODE_F6:SDL_Scancode
Const SDL_SCANCODE_F7:SDL_Scancode
Const SDL_SCANCODE_F8:SDL_Scancode
Const SDL_SCANCODE_F9:SDL_Scancode
Const SDL_SCANCODE_F10:SDL_Scancode
Const SDL_SCANCODE_F11:SDL_Scancode
Const SDL_SCANCODE_F12:SDL_Scancode
Const SDL_SCANCODE_PRINTSCREEN:SDL_Scancode
Const SDL_SCANCODE_SCROLLLOCK:SDL_Scancode
Const SDL_SCANCODE_PAUSE:SDL_Scancode
Const SDL_SCANCODE_INSERT:SDL_Scancode
Const SDL_SCANCODE_HOME:SDL_Scancode
Const SDL_SCANCODE_PAGEUP:SDL_Scancode
Const SDL_SCANCODE_DELETE:SDL_Scancode
Const SDL_SCANCODE_END:SDL_Scancode
Const SDL_SCANCODE_PAGEDOWN:SDL_Scancode
Const SDL_SCANCODE_RIGHT:SDL_Scancode
Const SDL_SCANCODE_LEFT:SDL_Scancode
Const SDL_SCANCODE_DOWN:SDL_Scancode
Const SDL_SCANCODE_UP:SDL_Scancode
Const SDL_SCANCODE_NUMLOCKCLEAR:SDL_Scancode
Const SDL_SCANCODE_KP_DIVIDE:SDL_Scancode
Const SDL_SCANCODE_KP_MULTIPLY:SDL_Scancode
Const SDL_SCANCODE_KP_MINUS:SDL_Scancode
Const SDL_SCANCODE_KP_PLUS:SDL_Scancode
Const SDL_SCANCODE_KP_ENTER:SDL_Scancode
Const SDL_SCANCODE_KP_1:SDL_Scancode
Const SDL_SCANCODE_KP_2:SDL_Scancode
Const SDL_SCANCODE_KP_3:SDL_Scancode
Const SDL_SCANCODE_KP_4:SDL_Scancode
Const SDL_SCANCODE_KP_5:SDL_Scancode
Const SDL_SCANCODE_KP_6:SDL_Scancode
Const SDL_SCANCODE_KP_7:SDL_Scancode
Const SDL_SCANCODE_KP_8:SDL_Scancode
Const SDL_SCANCODE_KP_9:SDL_Scancode
Const SDL_SCANCODE_KP_0:SDL_Scancode
Const SDL_SCANCODE_KP_PERIOD:SDL_Scancode
Const SDL_SCANCODE_NONUSBACKSLASH:SDL_Scancode
Const SDL_SCANCODE_APPLICATION:SDL_Scancode
Const SDL_SCANCODE_POWER:SDL_Scancode
Const SDL_SCANCODE_KP_EQUALS:SDL_Scancode
Const SDL_SCANCODE_F13:SDL_Scancode
Const SDL_SCANCODE_F14:SDL_Scancode
Const SDL_SCANCODE_F15:SDL_Scancode
Const SDL_SCANCODE_F16:SDL_Scancode
Const SDL_SCANCODE_F17:SDL_Scancode
Const SDL_SCANCODE_F18:SDL_Scancode
Const SDL_SCANCODE_F19:SDL_Scancode
Const SDL_SCANCODE_F20:SDL_Scancode
Const SDL_SCANCODE_F21:SDL_Scancode
Const SDL_SCANCODE_F22:SDL_Scancode
Const SDL_SCANCODE_F23:SDL_Scancode
Const SDL_SCANCODE_F24:SDL_Scancode
Const SDL_SCANCODE_EXECUTE:SDL_Scancode
Const SDL_SCANCODE_HELP:SDL_Scancode
Const SDL_SCANCODE_MENU:SDL_Scancode
Const SDL_SCANCODE_SELECT:SDL_Scancode
Const SDL_SCANCODE_STOP:SDL_Scancode
Const SDL_SCANCODE_AGAIN:SDL_Scancode
Const SDL_SCANCODE_UNDO:SDL_Scancode
Const SDL_SCANCODE_CUT:SDL_Scancode
Const SDL_SCANCODE_COPY:SDL_Scancode
Const SDL_SCANCODE_PASTE:SDL_Scancode
Const SDL_SCANCODE_FIND:SDL_Scancode
Const SDL_SCANCODE_MUTE:SDL_Scancode
Const SDL_SCANCODE_VOLUMEUP:SDL_Scancode
Const SDL_SCANCODE_VOLUMEDOWN:SDL_Scancode
Const SDL_SCANCODE_KP_COMMA:SDL_Scancode
Const SDL_SCANCODE_KP_EQUALSAS400:SDL_Scancode
Const SDL_SCANCODE_INTERNATIONAL1:SDL_Scancode
Const SDL_SCANCODE_INTERNATIONAL2:SDL_Scancode
Const SDL_SCANCODE_INTERNATIONAL3:SDL_Scancode
Const SDL_SCANCODE_INTERNATIONAL4:SDL_Scancode
Const SDL_SCANCODE_INTERNATIONAL5:SDL_Scancode
Const SDL_SCANCODE_INTERNATIONAL6:SDL_Scancode
Const SDL_SCANCODE_INTERNATIONAL7:SDL_Scancode
Const SDL_SCANCODE_INTERNATIONAL8:SDL_Scancode
Const SDL_SCANCODE_INTERNATIONAL9:SDL_Scancode
Const SDL_SCANCODE_LANG1:SDL_Scancode
Const SDL_SCANCODE_LANG2:SDL_Scancode
Const SDL_SCANCODE_LANG3:SDL_Scancode
Const SDL_SCANCODE_LANG4:SDL_Scancode
Const SDL_SCANCODE_LANG5:SDL_Scancode
Const SDL_SCANCODE_LANG6:SDL_Scancode
Const SDL_SCANCODE_LANG7:SDL_Scancode
Const SDL_SCANCODE_LANG8:SDL_Scancode
Const SDL_SCANCODE_LANG9:SDL_Scancode
Const SDL_SCANCODE_ALTERASE:SDL_Scancode
Const SDL_SCANCODE_SYSREQ:SDL_Scancode
Const SDL_SCANCODE_CANCEL:SDL_Scancode
Const SDL_SCANCODE_CLEAR:SDL_Scancode
Const SDL_SCANCODE_PRIOR:SDL_Scancode
Const SDL_SCANCODE_RETURN2:SDL_Scancode
Const SDL_SCANCODE_SEPARATOR:SDL_Scancode
Const SDL_SCANCODE_OUT:SDL_Scancode
Const SDL_SCANCODE_OPER:SDL_Scancode
Const SDL_SCANCODE_CLEARAGAIN:SDL_Scancode
Const SDL_SCANCODE_CRSEL:SDL_Scancode
Const SDL_SCANCODE_EXSEL:SDL_Scancode
Const SDL_SCANCODE_KP_00:SDL_Scancode
Const SDL_SCANCODE_KP_000:SDL_Scancode
Const SDL_SCANCODE_THOUSANDSSEPARATOR:SDL_Scancode
Const SDL_SCANCODE_DECIMALSEPARATOR:SDL_Scancode
Const SDL_SCANCODE_CURRENCYUNIT:SDL_Scancode
Const SDL_SCANCODE_CURRENCYSUBUNIT:SDL_Scancode
Const SDL_SCANCODE_KP_LEFTPAREN:SDL_Scancode
Const SDL_SCANCODE_KP_RIGHTPAREN:SDL_Scancode
Const SDL_SCANCODE_KP_LEFTBRACE:SDL_Scancode
Const SDL_SCANCODE_KP_RIGHTBRACE:SDL_Scancode
Const SDL_SCANCODE_KP_TAB:SDL_Scancode
Const SDL_SCANCODE_KP_BACKSPACE:SDL_Scancode
Const SDL_SCANCODE_KP_A:SDL_Scancode
Const SDL_SCANCODE_KP_B:SDL_Scancode
Const SDL_SCANCODE_KP_C:SDL_Scancode
Const SDL_SCANCODE_KP_D:SDL_Scancode
Const SDL_SCANCODE_KP_E:SDL_Scancode
Const SDL_SCANCODE_KP_F:SDL_Scancode
Const SDL_SCANCODE_KP_XOR:SDL_Scancode
Const SDL_SCANCODE_KP_POWER:SDL_Scancode
Const SDL_SCANCODE_KP_PERCENT:SDL_Scancode
Const SDL_SCANCODE_KP_LESS:SDL_Scancode
Const SDL_SCANCODE_KP_GREATER:SDL_Scancode
Const SDL_SCANCODE_KP_AMPERSAND:SDL_Scancode
Const SDL_SCANCODE_KP_DBLAMPERSAND:SDL_Scancode
Const SDL_SCANCODE_KP_VERTICALBAR:SDL_Scancode
Const SDL_SCANCODE_KP_DBLVERTICALBAR:SDL_Scancode
Const SDL_SCANCODE_KP_COLON:SDL_Scancode
Const SDL_SCANCODE_KP_HASH:SDL_Scancode
Const SDL_SCANCODE_KP_SPACE:SDL_Scancode
Const SDL_SCANCODE_KP_AT:SDL_Scancode
Const SDL_SCANCODE_KP_EXCLAM:SDL_Scancode
Const SDL_SCANCODE_KP_MEMSTORE:SDL_Scancode
Const SDL_SCANCODE_KP_MEMRECALL:SDL_Scancode
Const SDL_SCANCODE_KP_MEMCLEAR:SDL_Scancode
Const SDL_SCANCODE_KP_MEMADD:SDL_Scancode
Const SDL_SCANCODE_KP_MEMSUBTRACT:SDL_Scancode
Const SDL_SCANCODE_KP_MEMMULTIPLY:SDL_Scancode
Const SDL_SCANCODE_KP_MEMDIVIDE:SDL_Scancode
Const SDL_SCANCODE_KP_PLUSMINUS:SDL_Scancode
Const SDL_SCANCODE_KP_CLEAR:SDL_Scancode
Const SDL_SCANCODE_KP_CLEARENTRY:SDL_Scancode
Const SDL_SCANCODE_KP_BINARY:SDL_Scancode
Const SDL_SCANCODE_KP_OCTAL:SDL_Scancode
Const SDL_SCANCODE_KP_DECIMAL:SDL_Scancode
Const SDL_SCANCODE_KP_HEXADECIMAL:SDL_Scancode
Const SDL_SCANCODE_LCTRL:SDL_Scancode
Const SDL_SCANCODE_LSHIFT:SDL_Scancode
Const SDL_SCANCODE_LALT:SDL_Scancode
Const SDL_SCANCODE_LGUI:SDL_Scancode
Const SDL_SCANCODE_RCTRL:SDL_Scancode
Const SDL_SCANCODE_RSHIFT:SDL_Scancode
Const SDL_SCANCODE_RALT:SDL_Scancode
Const SDL_SCANCODE_RGUI:SDL_Scancode
Const SDL_SCANCODE_MODE:SDL_Scancode
Const SDL_SCANCODE_AUDIONEXT:SDL_Scancode
Const SDL_SCANCODE_AUDIOPREV:SDL_Scancode
Const SDL_SCANCODE_AUDIOSTOP:SDL_Scancode
Const SDL_SCANCODE_AUDIOPLAY:SDL_Scancode
Const SDL_SCANCODE_AUDIOMUTE:SDL_Scancode
Const SDL_SCANCODE_MEDIASELECT:SDL_Scancode
Const SDL_SCANCODE_WWW:SDL_Scancode
Const SDL_SCANCODE_MAIL:SDL_Scancode
Const SDL_SCANCODE_CALCULATOR:SDL_Scancode
Const SDL_SCANCODE_COMPUTER:SDL_Scancode
Const SDL_SCANCODE_AC_SEARCH:SDL_Scancode
Const SDL_SCANCODE_AC_HOME:SDL_Scancode
Const SDL_SCANCODE_AC_BACK:SDL_Scancode
Const SDL_SCANCODE_AC_FORWARD:SDL_Scancode
Const SDL_SCANCODE_AC_STOP:SDL_Scancode
Const SDL_SCANCODE_AC_REFRESH:SDL_Scancode
Const SDL_SCANCODE_AC_BOOKMARKS:SDL_Scancode
Const SDL_SCANCODE_BRIGHTNESSDOWN:SDL_Scancode
Const SDL_SCANCODE_BRIGHTNESSUP:SDL_Scancode
Const SDL_SCANCODE_DISPLAYSWITCH:SDL_Scancode
Const SDL_SCANCODE_KBDILLUMTOGGLE:SDL_Scancode
Const SDL_SCANCODE_KBDILLUMDOWN:SDL_Scancode
Const SDL_SCANCODE_KBDILLUMUP:SDL_Scancode
Const SDL_SCANCODE_EJECT:SDL_Scancode
Const SDL_SCANCODE_SLEEP:SDL_Scancode
Const SDL_SCANCODE_APP1:SDL_Scancode
Const SDL_SCANCODE_APP2:SDL_Scancode
Const SDL_SCANCODE_AUDIOREWIND:SDL_Scancode
Const SDL_SCANCODE_AUDIOFASTFORWARD:SDL_Scancode
Const SDL_NUM_SCANCODES:SDL_Scancode

'***** File: include/SDL2/SDL_keycode.h *****

Alias SDL_Keycode:Sint32
Enum SDL_KeyCode
End
Const SDLK_UNKNOWN:SDL_KeyCode
Const SDLK_RETURN:SDL_KeyCode
Const SDLK_ESCAPE:SDL_KeyCode
Const SDLK_BACKSPACE:SDL_KeyCode
Const SDLK_TAB:SDL_KeyCode
Const SDLK_SPACE:SDL_KeyCode
Const SDLK_EXCLAIM:SDL_KeyCode
Const SDLK_QUOTEDBL:SDL_KeyCode
Const SDLK_HASH:SDL_KeyCode
Const SDLK_PERCENT:SDL_KeyCode
Const SDLK_DOLLAR:SDL_KeyCode
Const SDLK_AMPERSAND:SDL_KeyCode
Const SDLK_QUOTE:SDL_KeyCode
Const SDLK_LEFTPAREN:SDL_KeyCode
Const SDLK_RIGHTPAREN:SDL_KeyCode
Const SDLK_ASTERISK:SDL_KeyCode
Const SDLK_PLUS:SDL_KeyCode
Const SDLK_COMMA:SDL_KeyCode
Const SDLK_MINUS:SDL_KeyCode
Const SDLK_PERIOD:SDL_KeyCode
Const SDLK_SLASH:SDL_KeyCode
Const SDLK_0:SDL_KeyCode
Const SDLK_1:SDL_KeyCode
Const SDLK_2:SDL_KeyCode
Const SDLK_3:SDL_KeyCode
Const SDLK_4:SDL_KeyCode
Const SDLK_5:SDL_KeyCode
Const SDLK_6:SDL_KeyCode
Const SDLK_7:SDL_KeyCode
Const SDLK_8:SDL_KeyCode
Const SDLK_9:SDL_KeyCode
Const SDLK_COLON:SDL_KeyCode
Const SDLK_SEMICOLON:SDL_KeyCode
Const SDLK_LESS:SDL_KeyCode
Const SDLK_EQUALS:SDL_KeyCode
Const SDLK_GREATER:SDL_KeyCode
Const SDLK_QUESTION:SDL_KeyCode
Const SDLK_AT:SDL_KeyCode
Const SDLK_LEFTBRACKET:SDL_KeyCode
Const SDLK_BACKSLASH:SDL_KeyCode
Const SDLK_RIGHTBRACKET:SDL_KeyCode
Const SDLK_CARET:SDL_KeyCode
Const SDLK_UNDERSCORE:SDL_KeyCode
Const SDLK_BACKQUOTE:SDL_KeyCode
Const SDLK_a:SDL_KeyCode
Const SDLK_b:SDL_KeyCode
Const SDLK_c:SDL_KeyCode
Const SDLK_d:SDL_KeyCode
Const SDLK_e:SDL_KeyCode
Const SDLK_f:SDL_KeyCode
Const SDLK_g:SDL_KeyCode
Const SDLK_h:SDL_KeyCode
Const SDLK_i:SDL_KeyCode
Const SDLK_j:SDL_KeyCode
Const SDLK_k:SDL_KeyCode
Const SDLK_l:SDL_KeyCode
Const SDLK_m:SDL_KeyCode
Const SDLK_n:SDL_KeyCode
Const SDLK_o:SDL_KeyCode
Const SDLK_p:SDL_KeyCode
Const SDLK_q:SDL_KeyCode
Const SDLK_r:SDL_KeyCode
Const SDLK_s:SDL_KeyCode
Const SDLK_t:SDL_KeyCode
Const SDLK_u:SDL_KeyCode
Const SDLK_v:SDL_KeyCode
Const SDLK_w:SDL_KeyCode
Const SDLK_x:SDL_KeyCode
Const SDLK_y:SDL_KeyCode
Const SDLK_z:SDL_KeyCode
Const SDLK_CAPSLOCK:SDL_KeyCode
Const SDLK_F1:SDL_KeyCode
Const SDLK_F2:SDL_KeyCode
Const SDLK_F3:SDL_KeyCode
Const SDLK_F4:SDL_KeyCode
Const SDLK_F5:SDL_KeyCode
Const SDLK_F6:SDL_KeyCode
Const SDLK_F7:SDL_KeyCode
Const SDLK_F8:SDL_KeyCode
Const SDLK_F9:SDL_KeyCode
Const SDLK_F10:SDL_KeyCode
Const SDLK_F11:SDL_KeyCode
Const SDLK_F12:SDL_KeyCode
Const SDLK_PRINTSCREEN:SDL_KeyCode
Const SDLK_SCROLLLOCK:SDL_KeyCode
Const SDLK_PAUSE:SDL_KeyCode
Const SDLK_INSERT:SDL_KeyCode
Const SDLK_HOME:SDL_KeyCode
Const SDLK_PAGEUP:SDL_KeyCode
Const SDLK_DELETE:SDL_KeyCode
Const SDLK_END:SDL_KeyCode
Const SDLK_PAGEDOWN:SDL_KeyCode
Const SDLK_RIGHT:SDL_KeyCode
Const SDLK_LEFT:SDL_KeyCode
Const SDLK_DOWN:SDL_KeyCode
Const SDLK_UP:SDL_KeyCode
Const SDLK_NUMLOCKCLEAR:SDL_KeyCode
Const SDLK_KP_DIVIDE:SDL_KeyCode
Const SDLK_KP_MULTIPLY:SDL_KeyCode
Const SDLK_KP_MINUS:SDL_KeyCode
Const SDLK_KP_PLUS:SDL_KeyCode
Const SDLK_KP_ENTER:SDL_KeyCode
Const SDLK_KP_1:SDL_KeyCode
Const SDLK_KP_2:SDL_KeyCode
Const SDLK_KP_3:SDL_KeyCode
Const SDLK_KP_4:SDL_KeyCode
Const SDLK_KP_5:SDL_KeyCode
Const SDLK_KP_6:SDL_KeyCode
Const SDLK_KP_7:SDL_KeyCode
Const SDLK_KP_8:SDL_KeyCode
Const SDLK_KP_9:SDL_KeyCode
Const SDLK_KP_0:SDL_KeyCode
Const SDLK_KP_PERIOD:SDL_KeyCode
Const SDLK_APPLICATION:SDL_KeyCode
Const SDLK_POWER:SDL_KeyCode
Const SDLK_KP_EQUALS:SDL_KeyCode
Const SDLK_F13:SDL_KeyCode
Const SDLK_F14:SDL_KeyCode
Const SDLK_F15:SDL_KeyCode
Const SDLK_F16:SDL_KeyCode
Const SDLK_F17:SDL_KeyCode
Const SDLK_F18:SDL_KeyCode
Const SDLK_F19:SDL_KeyCode
Const SDLK_F20:SDL_KeyCode
Const SDLK_F21:SDL_KeyCode
Const SDLK_F22:SDL_KeyCode
Const SDLK_F23:SDL_KeyCode
Const SDLK_F24:SDL_KeyCode
Const SDLK_EXECUTE:SDL_KeyCode
Const SDLK_HELP:SDL_KeyCode
Const SDLK_MENU:SDL_KeyCode
Const SDLK_SELECT:SDL_KeyCode
Const SDLK_STOP:SDL_KeyCode
Const SDLK_AGAIN:SDL_KeyCode
Const SDLK_UNDO:SDL_KeyCode
Const SDLK_CUT:SDL_KeyCode
Const SDLK_COPY:SDL_KeyCode
Const SDLK_PASTE:SDL_KeyCode
Const SDLK_FIND:SDL_KeyCode
Const SDLK_MUTE:SDL_KeyCode
Const SDLK_VOLUMEUP:SDL_KeyCode
Const SDLK_VOLUMEDOWN:SDL_KeyCode
Const SDLK_KP_COMMA:SDL_KeyCode
Const SDLK_KP_EQUALSAS400:SDL_KeyCode
Const SDLK_ALTERASE:SDL_KeyCode
Const SDLK_SYSREQ:SDL_KeyCode
Const SDLK_CANCEL:SDL_KeyCode
Const SDLK_CLEAR:SDL_KeyCode
Const SDLK_PRIOR:SDL_KeyCode
Const SDLK_RETURN2:SDL_KeyCode
Const SDLK_SEPARATOR:SDL_KeyCode
Const SDLK_OUT:SDL_KeyCode
Const SDLK_OPER:SDL_KeyCode
Const SDLK_CLEARAGAIN:SDL_KeyCode
Const SDLK_CRSEL:SDL_KeyCode
Const SDLK_EXSEL:SDL_KeyCode
Const SDLK_KP_00:SDL_KeyCode
Const SDLK_KP_000:SDL_KeyCode
Const SDLK_THOUSANDSSEPARATOR:SDL_KeyCode
Const SDLK_DECIMALSEPARATOR:SDL_KeyCode
Const SDLK_CURRENCYUNIT:SDL_KeyCode
Const SDLK_CURRENCYSUBUNIT:SDL_KeyCode
Const SDLK_KP_LEFTPAREN:SDL_KeyCode
Const SDLK_KP_RIGHTPAREN:SDL_KeyCode
Const SDLK_KP_LEFTBRACE:SDL_KeyCode
Const SDLK_KP_RIGHTBRACE:SDL_KeyCode
Const SDLK_KP_TAB:SDL_KeyCode
Const SDLK_KP_BACKSPACE:SDL_KeyCode
Const SDLK_KP_A:SDL_KeyCode
Const SDLK_KP_B:SDL_KeyCode
Const SDLK_KP_C:SDL_KeyCode
Const SDLK_KP_D:SDL_KeyCode
Const SDLK_KP_E:SDL_KeyCode
Const SDLK_KP_F:SDL_KeyCode
Const SDLK_KP_XOR:SDL_KeyCode
Const SDLK_KP_POWER:SDL_KeyCode
Const SDLK_KP_PERCENT:SDL_KeyCode
Const SDLK_KP_LESS:SDL_KeyCode
Const SDLK_KP_GREATER:SDL_KeyCode
Const SDLK_KP_AMPERSAND:SDL_KeyCode
Const SDLK_KP_DBLAMPERSAND:SDL_KeyCode
Const SDLK_KP_VERTICALBAR:SDL_KeyCode
Const SDLK_KP_DBLVERTICALBAR:SDL_KeyCode
Const SDLK_KP_COLON:SDL_KeyCode
Const SDLK_KP_HASH:SDL_KeyCode
Const SDLK_KP_SPACE:SDL_KeyCode
Const SDLK_KP_AT:SDL_KeyCode
Const SDLK_KP_EXCLAM:SDL_KeyCode
Const SDLK_KP_MEMSTORE:SDL_KeyCode
Const SDLK_KP_MEMRECALL:SDL_KeyCode
Const SDLK_KP_MEMCLEAR:SDL_KeyCode
Const SDLK_KP_MEMADD:SDL_KeyCode
Const SDLK_KP_MEMSUBTRACT:SDL_KeyCode
Const SDLK_KP_MEMMULTIPLY:SDL_KeyCode
Const SDLK_KP_MEMDIVIDE:SDL_KeyCode
Const SDLK_KP_PLUSMINUS:SDL_KeyCode
Const SDLK_KP_CLEAR:SDL_KeyCode
Const SDLK_KP_CLEARENTRY:SDL_KeyCode
Const SDLK_KP_BINARY:SDL_KeyCode
Const SDLK_KP_OCTAL:SDL_KeyCode
Const SDLK_KP_DECIMAL:SDL_KeyCode
Const SDLK_KP_HEXADECIMAL:SDL_KeyCode
Const SDLK_LCTRL:SDL_KeyCode
Const SDLK_LSHIFT:SDL_KeyCode
Const SDLK_LALT:SDL_KeyCode
Const SDLK_LGUI:SDL_KeyCode
Const SDLK_RCTRL:SDL_KeyCode
Const SDLK_RSHIFT:SDL_KeyCode
Const SDLK_RALT:SDL_KeyCode
Const SDLK_RGUI:SDL_KeyCode
Const SDLK_MODE:SDL_KeyCode
Const SDLK_AUDIONEXT:SDL_KeyCode
Const SDLK_AUDIOPREV:SDL_KeyCode
Const SDLK_AUDIOSTOP:SDL_KeyCode
Const SDLK_AUDIOPLAY:SDL_KeyCode
Const SDLK_AUDIOMUTE:SDL_KeyCode
Const SDLK_MEDIASELECT:SDL_KeyCode
Const SDLK_WWW:SDL_KeyCode
Const SDLK_MAIL:SDL_KeyCode
Const SDLK_CALCULATOR:SDL_KeyCode
Const SDLK_COMPUTER:SDL_KeyCode
Const SDLK_AC_SEARCH:SDL_KeyCode
Const SDLK_AC_HOME:SDL_KeyCode
Const SDLK_AC_BACK:SDL_KeyCode
Const SDLK_AC_FORWARD:SDL_KeyCode
Const SDLK_AC_STOP:SDL_KeyCode
Const SDLK_AC_REFRESH:SDL_KeyCode
Const SDLK_AC_BOOKMARKS:SDL_KeyCode
Const SDLK_BRIGHTNESSDOWN:SDL_KeyCode
Const SDLK_BRIGHTNESSUP:SDL_KeyCode
Const SDLK_DISPLAYSWITCH:SDL_KeyCode
Const SDLK_KBDILLUMTOGGLE:SDL_KeyCode
Const SDLK_KBDILLUMDOWN:SDL_KeyCode
Const SDLK_KBDILLUMUP:SDL_KeyCode
Const SDLK_EJECT:SDL_KeyCode
Const SDLK_SLEEP:SDL_KeyCode
Const SDLK_APP1:SDL_KeyCode
Const SDLK_APP2:SDL_KeyCode
Const SDLK_AUDIOREWIND:SDL_KeyCode
Const SDLK_AUDIOFASTFORWARD:SDL_KeyCode
Enum SDL_Keymod
End
Const KMOD_NONE:SDL_Keymod
Const KMOD_LSHIFT:SDL_Keymod
Const KMOD_RSHIFT:SDL_Keymod
Const KMOD_LCTRL:SDL_Keymod
Const KMOD_RCTRL:SDL_Keymod
Const KMOD_LALT:SDL_Keymod
Const KMOD_RALT:SDL_Keymod
Const KMOD_LGUI:SDL_Keymod
Const KMOD_RGUI:SDL_Keymod
Const KMOD_NUM:SDL_Keymod
Const KMOD_CAPS:SDL_Keymod
Const KMOD_MODE:SDL_Keymod
Const KMOD_SCROLL:SDL_Keymod
Const KMOD_CTRL:SDL_Keymod
Const KMOD_SHIFT:SDL_Keymod
Const KMOD_ALT:SDL_Keymod
Const KMOD_GUI:SDL_Keymod
Const KMOD_RESERVED:SDL_Keymod

'***** File: include/SDL2/SDL_keyboard.h *****

Struct SDL_Keysym
	Field scancode:SDL_Scancode
	Field sym:SDL_Keycode
	Field mod_:Uint16
	Field unused:Uint32
End
Function SDL_GetKeyboardFocus:SDL_Window Ptr(  )
Function SDL_GetKeyboardState:Uint8 Ptr( numkeys:Int Ptr )
Function SDL_GetModState:SDL_Keymod(  )
Function SDL_SetModState:Void( modstate:SDL_Keymod )
Function SDL_GetKeyFromScancode:SDL_Keycode( scancode:SDL_Scancode )
Function SDL_GetScancodeFromKey:SDL_Scancode( key:SDL_Keycode )
Function SDL_GetScancodeName:CString( scancode:SDL_Scancode )
Function SDL_GetScancodeFromName:SDL_Scancode( name:CString )
Function SDL_GetKeyName:CString( key:SDL_Keycode )
Function SDL_GetKeyFromName:SDL_Keycode( name:CString )
Function SDL_StartTextInput:Void(  )
Function SDL_IsTextInputActive:SDL_bool(  )
Function SDL_StopTextInput:Void(  )
Function SDL_ClearComposition:Void(  )
Function SDL_IsTextInputShown:SDL_bool(  )
Function SDL_SetTextInputRect:Void( rect:SDL_Rect Ptr )
Function SDL_HasScreenKeyboardSupport:SDL_bool(  )
Function SDL_IsScreenKeyboardShown:SDL_bool( window:SDL_Window Ptr )

'***** File: include/SDL2/SDL_mouse.h *****

Enum SDL_SystemCursor
End
Const SDL_SYSTEM_CURSOR_ARROW:SDL_SystemCursor
Const SDL_SYSTEM_CURSOR_IBEAM:SDL_SystemCursor
Const SDL_SYSTEM_CURSOR_WAIT:SDL_SystemCursor
Const SDL_SYSTEM_CURSOR_CROSSHAIR:SDL_SystemCursor
Const SDL_SYSTEM_CURSOR_WAITARROW:SDL_SystemCursor
Const SDL_SYSTEM_CURSOR_SIZENWSE:SDL_SystemCursor
Const SDL_SYSTEM_CURSOR_SIZENESW:SDL_SystemCursor
Const SDL_SYSTEM_CURSOR_SIZEWE:SDL_SystemCursor
Const SDL_SYSTEM_CURSOR_SIZENS:SDL_SystemCursor
Const SDL_SYSTEM_CURSOR_SIZEALL:SDL_SystemCursor
Const SDL_SYSTEM_CURSOR_NO:SDL_SystemCursor
Const SDL_SYSTEM_CURSOR_HAND:SDL_SystemCursor
Const SDL_NUM_SYSTEM_CURSORS:SDL_SystemCursor
Enum SDL_MouseWheelDirection
End
Const SDL_MOUSEWHEEL_NORMAL:SDL_MouseWheelDirection
Const SDL_MOUSEWHEEL_FLIPPED:SDL_MouseWheelDirection
Function SDL_GetMouseFocus:SDL_Window Ptr(  )
Function SDL_GetMouseState:Uint32( x:Int Ptr, y:Int Ptr )
Function SDL_GetGlobalMouseState:Uint32( x:Int Ptr, y:Int Ptr )
Function SDL_GetRelativeMouseState:Uint32( x:Int Ptr, y:Int Ptr )
Function SDL_WarpMouseInWindow:Void( window:SDL_Window Ptr, x:Int, y:Int )
Function SDL_WarpMouseGlobal:Int( x:Int, y:Int )
Function SDL_SetRelativeMouseMode:Int( enabled:SDL_bool )
Function SDL_CaptureMouse:Int( enabled:SDL_bool )
Function SDL_GetRelativeMouseMode:SDL_bool(  )
Function SDL_CreateCursor:SDL_Cursor Ptr( data:Uint8 Ptr, mask:Uint8 Ptr, w:Int, h:Int, hot_x:Int, hot_y:Int )
Function SDL_CreateColorCursor:SDL_Cursor Ptr( surface:SDL_Surface Ptr, hot_x:Int, hot_y:Int )
Function SDL_CreateSystemCursor:SDL_Cursor Ptr( id:SDL_SystemCursor )
Function SDL_SetCursor:Void( cursor:SDL_Cursor Ptr )
Function SDL_GetCursor:SDL_Cursor Ptr(  )
Function SDL_GetDefaultCursor:SDL_Cursor Ptr(  )
Function SDL_FreeCursor:Void( cursor:SDL_Cursor Ptr )
Function SDL_ShowCursor:Int( toggle:Int )

'***** File: include/SDL2/SDL_joystick.h *****

Alias SDL_Joystick:_SDL_Joystick
Struct SDL_JoystickGUID
	Field data:Uint8 Ptr
End
Alias SDL_JoystickID:Sint32
Enum SDL_JoystickType
End
Const SDL_JOYSTICK_TYPE_UNKNOWN:SDL_JoystickType
Const SDL_JOYSTICK_TYPE_GAMECONTROLLER:SDL_JoystickType
Const SDL_JOYSTICK_TYPE_WHEEL:SDL_JoystickType
Const SDL_JOYSTICK_TYPE_ARCADE_STICK:SDL_JoystickType
Const SDL_JOYSTICK_TYPE_FLIGHT_STICK:SDL_JoystickType
Const SDL_JOYSTICK_TYPE_DANCE_PAD:SDL_JoystickType
Const SDL_JOYSTICK_TYPE_GUITAR:SDL_JoystickType
Const SDL_JOYSTICK_TYPE_DRUM_KIT:SDL_JoystickType
Const SDL_JOYSTICK_TYPE_ARCADE_PAD:SDL_JoystickType
Const SDL_JOYSTICK_TYPE_THROTTLE:SDL_JoystickType
Enum SDL_JoystickPowerLevel
End
Const SDL_JOYSTICK_POWER_UNKNOWN:SDL_JoystickPowerLevel
Const SDL_JOYSTICK_POWER_EMPTY:SDL_JoystickPowerLevel
Const SDL_JOYSTICK_POWER_LOW:SDL_JoystickPowerLevel
Const SDL_JOYSTICK_POWER_MEDIUM:SDL_JoystickPowerLevel
Const SDL_JOYSTICK_POWER_FULL:SDL_JoystickPowerLevel
Const SDL_JOYSTICK_POWER_WIRED:SDL_JoystickPowerLevel
Const SDL_JOYSTICK_POWER_MAX:SDL_JoystickPowerLevel
Function SDL_LockJoysticks:Void(  )
Function SDL_UnlockJoysticks:Void(  )
Function SDL_NumJoysticks:Int(  )
Function SDL_JoystickNameForIndex:CString( device_index:Int )
Function SDL_JoystickGetDevicePlayerIndex:Int( device_index:Int )
Function SDL_JoystickGetDeviceGUID:SDL_JoystickGUID( device_index:Int )
Function SDL_JoystickGetDeviceVendor:Uint16( device_index:Int )
Function SDL_JoystickGetDeviceProduct:Uint16( device_index:Int )
Function SDL_JoystickGetDeviceProductVersion:Uint16( device_index:Int )
Function SDL_JoystickGetDeviceType:SDL_JoystickType( device_index:Int )
Function SDL_JoystickGetDeviceInstanceID:SDL_JoystickID( device_index:Int )
Function SDL_JoystickOpen:SDL_Joystick Ptr( device_index:Int )
Function SDL_JoystickFromInstanceID:SDL_Joystick Ptr( instance_id:SDL_JoystickID )
Function SDL_JoystickFromPlayerIndex:SDL_Joystick Ptr( player_index:Int )
Function SDL_JoystickAttachVirtual:Int( type:SDL_JoystickType, naxes:Int, nbuttons:Int, nhats:Int )
Function SDL_JoystickDetachVirtual:Int( device_index:Int )
Function SDL_JoystickIsVirtual:SDL_bool( device_index:Int )
Function SDL_JoystickSetVirtualAxis:Int( joystick:SDL_Joystick Ptr, axis:Int, value:Sint16 )
Function SDL_JoystickSetVirtualButton:Int( joystick:SDL_Joystick Ptr, button:Int, value:Uint8 )
Function SDL_JoystickSetVirtualHat:Int( joystick:SDL_Joystick Ptr, hat:Int, value:Uint8 )
Function SDL_JoystickName:CString( joystick:SDL_Joystick Ptr )
Function SDL_JoystickGetPlayerIndex:Int( joystick:SDL_Joystick Ptr )
Function SDL_JoystickSetPlayerIndex:Void( joystick:SDL_Joystick Ptr, player_index:Int )
Function SDL_JoystickGetGUID:SDL_JoystickGUID( joystick:SDL_Joystick Ptr )
Function SDL_JoystickGetVendor:Uint16( joystick:SDL_Joystick Ptr )
Function SDL_JoystickGetProduct:Uint16( joystick:SDL_Joystick Ptr )
Function SDL_JoystickGetProductVersion:Uint16( joystick:SDL_Joystick Ptr )
Function SDL_JoystickGetSerial:CString( joystick:SDL_Joystick Ptr )
Function SDL_JoystickGetType:SDL_JoystickType( joystick:SDL_Joystick Ptr )
Function SDL_JoystickGetGUIDString:Void( guid:SDL_JoystickGUID, pszGUID:libc.char_t Ptr, cbGUID:Int )
Function SDL_JoystickGetGUIDFromString:SDL_JoystickGUID( pchGUID:CString )
Function SDL_JoystickGetAttached:SDL_bool( joystick:SDL_Joystick Ptr )
Function SDL_JoystickInstanceID:SDL_JoystickID( joystick:SDL_Joystick Ptr )
Function SDL_JoystickNumAxes:Int( joystick:SDL_Joystick Ptr )
Function SDL_JoystickNumBalls:Int( joystick:SDL_Joystick Ptr )
Function SDL_JoystickNumHats:Int( joystick:SDL_Joystick Ptr )
Function SDL_JoystickNumButtons:Int( joystick:SDL_Joystick Ptr )
Function SDL_JoystickUpdate:Void(  )
Function SDL_JoystickEventState:Int( state:Int )
Function SDL_JoystickGetAxis:Sint16( joystick:SDL_Joystick Ptr, axis:Int )
Function SDL_JoystickGetAxisInitialState:SDL_bool( joystick:SDL_Joystick Ptr, axis:Int, state:Sint16 Ptr )
Function SDL_JoystickGetHat:Uint8( joystick:SDL_Joystick Ptr, hat:Int )
Function SDL_JoystickGetBall:Int( joystick:SDL_Joystick Ptr, ball:Int, dx:Int Ptr, dy:Int Ptr )
Function SDL_JoystickGetButton:Uint8( joystick:SDL_Joystick Ptr, button:Int )
Function SDL_JoystickRumble:Int( joystick:SDL_Joystick Ptr, low_frequency_rumble:Uint16, high_frequency_rumble:Uint16, duration_ms:Uint32 )
Function SDL_JoystickRumbleTriggers:Int( joystick:SDL_Joystick Ptr, left_rumble:Uint16, right_rumble:Uint16, duration_ms:Uint32 )
Function SDL_JoystickHasLED:SDL_bool( joystick:SDL_Joystick Ptr )
Function SDL_JoystickHasRumble:SDL_bool( joystick:SDL_Joystick Ptr )
Function SDL_JoystickHasRumbleTriggers:SDL_bool( joystick:SDL_Joystick Ptr )
Function SDL_JoystickSetLED:Int( joystick:SDL_Joystick Ptr, red:Uint8, green:Uint8, blue:Uint8 )
Function SDL_JoystickSendEffect:Int( joystick:SDL_Joystick Ptr, data:Void Ptr, size:Int )
Function SDL_JoystickClose:Void( joystick:SDL_Joystick Ptr )
Function SDL_JoystickCurrentPowerLevel:SDL_JoystickPowerLevel( joystick:SDL_Joystick Ptr )

'***** File: include/SDL2/SDL_sensor.h *****

Alias SDL_Sensor:_SDL_Sensor
Alias SDL_SensorID:Sint32
Enum SDL_SensorType
End
Const SDL_SENSOR_INVALID:SDL_SensorType
Const SDL_SENSOR_UNKNOWN:SDL_SensorType
Const SDL_SENSOR_ACCEL:SDL_SensorType
Const SDL_SENSOR_GYRO:SDL_SensorType
Function SDL_LockSensors:Void(  )
Function SDL_UnlockSensors:Void(  )
Function SDL_NumSensors:Int(  )
Function SDL_SensorGetDeviceName:CString( device_index:Int )
Function SDL_SensorGetDeviceType:SDL_SensorType( device_index:Int )
Function SDL_SensorGetDeviceNonPortableType:Int( device_index:Int )
Function SDL_SensorGetDeviceInstanceID:SDL_SensorID( device_index:Int )
Function SDL_SensorOpen:SDL_Sensor Ptr( device_index:Int )
Function SDL_SensorFromInstanceID:SDL_Sensor Ptr( instance_id:SDL_SensorID )
Function SDL_SensorGetName:CString( sensor:SDL_Sensor Ptr )
Function SDL_SensorGetType:SDL_SensorType( sensor:SDL_Sensor Ptr )
Function SDL_SensorGetNonPortableType:Int( sensor:SDL_Sensor Ptr )
Function SDL_SensorGetInstanceID:SDL_SensorID( sensor:SDL_Sensor Ptr )
Function SDL_SensorGetData:Int( sensor:SDL_Sensor Ptr, data:Float Ptr, num_values:Int )
Function SDL_SensorClose:Void( sensor:SDL_Sensor Ptr )
Function SDL_SensorUpdate:Void(  )

'***** File: include/SDL2/SDL_gamecontroller.h *****

Alias SDL_GameController:_SDL_GameController
Enum SDL_GameControllerType
End
Const SDL_CONTROLLER_TYPE_UNKNOWN:SDL_GameControllerType
Const SDL_CONTROLLER_TYPE_XBOX360:SDL_GameControllerType
Const SDL_CONTROLLER_TYPE_XBOXONE:SDL_GameControllerType
Const SDL_CONTROLLER_TYPE_PS3:SDL_GameControllerType
Const SDL_CONTROLLER_TYPE_PS4:SDL_GameControllerType
Const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_PRO:SDL_GameControllerType
Const SDL_CONTROLLER_TYPE_VIRTUAL:SDL_GameControllerType
Const SDL_CONTROLLER_TYPE_PS5:SDL_GameControllerType
Const SDL_CONTROLLER_TYPE_AMAZON_LUNA:SDL_GameControllerType
Const SDL_CONTROLLER_TYPE_GOOGLE_STADIA:SDL_GameControllerType
Enum SDL_GameControllerBindType
End
Const SDL_CONTROLLER_BINDTYPE_NONE:SDL_GameControllerBindType
Const SDL_CONTROLLER_BINDTYPE_BUTTON:SDL_GameControllerBindType
Const SDL_CONTROLLER_BINDTYPE_AXIS:SDL_GameControllerBindType
Const SDL_CONTROLLER_BINDTYPE_HAT:SDL_GameControllerBindType
Struct SDL_GameControllerButtonBind
	Field bindType:SDL_GameControllerBindType
End
Function SDL_GameControllerAddMappingsFromRW:Int( rw:SDL_RWops Ptr, freerw:Int )
Function SDL_GameControllerAddMapping:Int( mappingString:CString )
Function SDL_GameControllerNumMappings:Int(  )
Function SDL_GameControllerMappingForIndex:libc.char_t Ptr( mapping_index:Int )
Function SDL_GameControllerMappingForGUID:libc.char_t Ptr( guid:SDL_JoystickGUID )
Function SDL_GameControllerMapping:libc.char_t Ptr( gamecontroller:SDL_GameController Ptr )
Function SDL_IsGameController:SDL_bool( joystick_index:Int )
Function SDL_GameControllerNameForIndex:CString( joystick_index:Int )
Function SDL_GameControllerTypeForIndex:SDL_GameControllerType( joystick_index:Int )
Function SDL_GameControllerMappingForDeviceIndex:libc.char_t Ptr( joystick_index:Int )
Function SDL_GameControllerOpen:SDL_GameController Ptr( joystick_index:Int )
Function SDL_GameControllerFromInstanceID:SDL_GameController Ptr( joyid:SDL_JoystickID )
Function SDL_GameControllerFromPlayerIndex:SDL_GameController Ptr( player_index:Int )
Function SDL_GameControllerName:CString( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerGetType:SDL_GameControllerType( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerGetPlayerIndex:Int( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerSetPlayerIndex:Void( gamecontroller:SDL_GameController Ptr, player_index:Int )
Function SDL_GameControllerGetVendor:Uint16( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerGetProduct:Uint16( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerGetProductVersion:Uint16( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerGetSerial:CString( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerGetAttached:SDL_bool( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerGetJoystick:SDL_Joystick Ptr( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerEventState:Int( state:Int )
Function SDL_GameControllerUpdate:Void(  )
Enum SDL_GameControllerAxis
End
Const SDL_CONTROLLER_AXIS_INVALID:SDL_GameControllerAxis
Const SDL_CONTROLLER_AXIS_LEFTX:SDL_GameControllerAxis
Const SDL_CONTROLLER_AXIS_LEFTY:SDL_GameControllerAxis
Const SDL_CONTROLLER_AXIS_RIGHTX:SDL_GameControllerAxis
Const SDL_CONTROLLER_AXIS_RIGHTY:SDL_GameControllerAxis
Const SDL_CONTROLLER_AXIS_TRIGGERLEFT:SDL_GameControllerAxis
Const SDL_CONTROLLER_AXIS_TRIGGERRIGHT:SDL_GameControllerAxis
Const SDL_CONTROLLER_AXIS_MAX:SDL_GameControllerAxis
Function SDL_GameControllerGetAxisFromString:SDL_GameControllerAxis( str:CString )
Function SDL_GameControllerGetStringForAxis:CString( axis:SDL_GameControllerAxis )
Function SDL_GameControllerGetBindForAxis:SDL_GameControllerButtonBind( gamecontroller:SDL_GameController Ptr, axis:SDL_GameControllerAxis )
Function SDL_GameControllerHasAxis:SDL_bool( gamecontroller:SDL_GameController Ptr, axis:SDL_GameControllerAxis )
Function SDL_GameControllerGetAxis:Sint16( gamecontroller:SDL_GameController Ptr, axis:SDL_GameControllerAxis )
Enum SDL_GameControllerButton
End
Const SDL_CONTROLLER_BUTTON_INVALID:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_A:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_B:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_X:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_Y:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_BACK:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_GUIDE:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_START:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_LEFTSTICK:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_RIGHTSTICK:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_LEFTSHOULDER:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_RIGHTSHOULDER:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_DPAD_UP:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_DPAD_DOWN:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_DPAD_LEFT:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_DPAD_RIGHT:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_MISC1:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_PADDLE1:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_PADDLE2:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_PADDLE3:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_PADDLE4:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_TOUCHPAD:SDL_GameControllerButton
Const SDL_CONTROLLER_BUTTON_MAX:SDL_GameControllerButton
Function SDL_GameControllerGetButtonFromString:SDL_GameControllerButton( str:CString )
Function SDL_GameControllerGetStringForButton:CString( button:SDL_GameControllerButton )
Function SDL_GameControllerGetBindForButton:SDL_GameControllerButtonBind( gamecontroller:SDL_GameController Ptr, button:SDL_GameControllerButton )
Function SDL_GameControllerHasButton:SDL_bool( gamecontroller:SDL_GameController Ptr, button:SDL_GameControllerButton )
Function SDL_GameControllerGetButton:Uint8( gamecontroller:SDL_GameController Ptr, button:SDL_GameControllerButton )
Function SDL_GameControllerGetNumTouchpads:Int( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerGetNumTouchpadFingers:Int( gamecontroller:SDL_GameController Ptr, touchpad:Int )
Function SDL_GameControllerGetTouchpadFinger:Int( gamecontroller:SDL_GameController Ptr, touchpad:Int, finger:Int, state:Uint8 Ptr, x:Float Ptr, y:Float Ptr, pressure:Float Ptr )
Function SDL_GameControllerHasSensor:SDL_bool( gamecontroller:SDL_GameController Ptr, type:SDL_SensorType )
Function SDL_GameControllerSetSensorEnabled:Int( gamecontroller:SDL_GameController Ptr, type:SDL_SensorType, enabled:SDL_bool )
Function SDL_GameControllerIsSensorEnabled:SDL_bool( gamecontroller:SDL_GameController Ptr, type:SDL_SensorType )
Function SDL_GameControllerGetSensorDataRate:Float( gamecontroller:SDL_GameController Ptr, type:SDL_SensorType )
Function SDL_GameControllerGetSensorData:Int( gamecontroller:SDL_GameController Ptr, type:SDL_SensorType, data:Float Ptr, num_values:Int )
Function SDL_GameControllerRumble:Int( gamecontroller:SDL_GameController Ptr, low_frequency_rumble:Uint16, high_frequency_rumble:Uint16, duration_ms:Uint32 )
Function SDL_GameControllerRumbleTriggers:Int( gamecontroller:SDL_GameController Ptr, left_rumble:Uint16, right_rumble:Uint16, duration_ms:Uint32 )
Function SDL_GameControllerHasLED:SDL_bool( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerHasRumble:SDL_bool( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerHasRumbleTriggers:SDL_bool( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerSetLED:Int( gamecontroller:SDL_GameController Ptr, red:Uint8, green:Uint8, blue:Uint8 )
Function SDL_GameControllerSendEffect:Int( gamecontroller:SDL_GameController Ptr, data:Void Ptr, size:Int )
Function SDL_GameControllerClose:Void( gamecontroller:SDL_GameController Ptr )
Function SDL_GameControllerGetAppleSFSymbolsNameForButton:CString( gamecontroller:SDL_GameController Ptr, button:SDL_GameControllerButton )
Function SDL_GameControllerGetAppleSFSymbolsNameForAxis:CString( gamecontroller:SDL_GameController Ptr, axis:SDL_GameControllerAxis )

'***** File: include/SDL2/SDL_touch.h *****

Alias SDL_TouchID:Sint64
Alias SDL_FingerID:Sint64
Enum SDL_TouchDeviceType
End
Const SDL_TOUCH_DEVICE_INVALID:SDL_TouchDeviceType
Const SDL_TOUCH_DEVICE_DIRECT:SDL_TouchDeviceType
Const SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE:SDL_TouchDeviceType
Const SDL_TOUCH_DEVICE_INDIRECT_RELATIVE:SDL_TouchDeviceType
Struct SDL_Finger
	Field id:SDL_FingerID
	Field x:Float
	Field y:Float
	Field pressure:Float
End
Function SDL_GetNumTouchDevices:Int(  )
Function SDL_GetTouchDevice:SDL_TouchID( index:Int )
Function SDL_GetTouchName:CString( index:Int )
Function SDL_GetTouchDeviceType:SDL_TouchDeviceType( touchID:SDL_TouchID )
Function SDL_GetNumTouchFingers:Int( touchID:SDL_TouchID )
Function SDL_GetTouchFinger:SDL_Finger Ptr( touchID:SDL_TouchID, index:Int )

'***** File: include/SDL2/SDL_gesture.h *****

Alias SDL_GestureID:Sint64
Function SDL_RecordGesture:Int( touchId:SDL_TouchID )
Function SDL_SaveAllDollarTemplates:Int( dst:SDL_RWops Ptr )
Function SDL_SaveDollarTemplate:Int( gestureId:SDL_GestureID, dst:SDL_RWops Ptr )
Function SDL_LoadDollarTemplates:Int( touchId:SDL_TouchID, src:SDL_RWops Ptr )

'***** File: include/SDL2/SDL_events.h *****

Enum SDL_EventType
End
Const SDL_FIRSTEVENT:SDL_EventType
Const SDL_QUIT:SDL_EventType
Const SDL_APP_TERMINATING:SDL_EventType
Const SDL_APP_LOWMEMORY:SDL_EventType
Const SDL_APP_WILLENTERBACKGROUND:SDL_EventType
Const SDL_APP_DIDENTERBACKGROUND:SDL_EventType
Const SDL_APP_WILLENTERFOREGROUND:SDL_EventType
Const SDL_APP_DIDENTERFOREGROUND:SDL_EventType
Const SDL_LOCALECHANGED:SDL_EventType
Const SDL_DISPLAYEVENT:SDL_EventType
Const SDL_WINDOWEVENT:SDL_EventType
Const SDL_SYSWMEVENT:SDL_EventType
Const SDL_KEYDOWN:SDL_EventType
Const SDL_KEYUP:SDL_EventType
Const SDL_TEXTEDITING:SDL_EventType
Const SDL_TEXTINPUT:SDL_EventType
Const SDL_KEYMAPCHANGED:SDL_EventType
Const SDL_TEXTEDITING_EXT:SDL_EventType
Const SDL_MOUSEMOTION:SDL_EventType
Const SDL_MOUSEBUTTONDOWN:SDL_EventType
Const SDL_MOUSEBUTTONUP:SDL_EventType
Const SDL_MOUSEWHEEL:SDL_EventType
Const SDL_JOYAXISMOTION:SDL_EventType
Const SDL_JOYBALLMOTION:SDL_EventType
Const SDL_JOYHATMOTION:SDL_EventType
Const SDL_JOYBUTTONDOWN:SDL_EventType
Const SDL_JOYBUTTONUP:SDL_EventType
Const SDL_JOYDEVICEADDED:SDL_EventType
Const SDL_JOYDEVICEREMOVED:SDL_EventType
Const SDL_CONTROLLERAXISMOTION:SDL_EventType
Const SDL_CONTROLLERBUTTONDOWN:SDL_EventType
Const SDL_CONTROLLERBUTTONUP:SDL_EventType
Const SDL_CONTROLLERDEVICEADDED:SDL_EventType
Const SDL_CONTROLLERDEVICEREMOVED:SDL_EventType
Const SDL_CONTROLLERDEVICEREMAPPED:SDL_EventType
Const SDL_CONTROLLERTOUCHPADDOWN:SDL_EventType
Const SDL_CONTROLLERTOUCHPADMOTION:SDL_EventType
Const SDL_CONTROLLERTOUCHPADUP:SDL_EventType
Const SDL_CONTROLLERSENSORUPDATE:SDL_EventType
Const SDL_FINGERDOWN:SDL_EventType
Const SDL_FINGERUP:SDL_EventType
Const SDL_FINGERMOTION:SDL_EventType
Const SDL_DOLLARGESTURE:SDL_EventType
Const SDL_DOLLARRECORD:SDL_EventType
Const SDL_MULTIGESTURE:SDL_EventType
Const SDL_CLIPBOARDUPDATE:SDL_EventType
Const SDL_DROPFILE:SDL_EventType
Const SDL_DROPTEXT:SDL_EventType
Const SDL_DROPBEGIN:SDL_EventType
Const SDL_DROPCOMPLETE:SDL_EventType
Const SDL_AUDIODEVICEADDED:SDL_EventType
Const SDL_AUDIODEVICEREMOVED:SDL_EventType
Const SDL_SENSORUPDATE:SDL_EventType
Const SDL_RENDER_TARGETS_RESET:SDL_EventType
Const SDL_RENDER_DEVICE_RESET:SDL_EventType
Const SDL_POLLSENTINEL:SDL_EventType
Const SDL_USEREVENT:SDL_EventType
Const SDL_LASTEVENT:SDL_EventType
Struct SDL_CommonEvent
	Field type:Uint32
	Field timestamp:Uint32
End
Struct SDL_DisplayEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field display:Uint32
	Field event:Uint8
	Field padding1:Uint8
	Field padding2:Uint8
	Field padding3:Uint8
	Field data1:Sint32
End
Struct SDL_WindowEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field windowID:Uint32
	Field event:Uint8
	Field padding1:Uint8
	Field padding2:Uint8
	Field padding3:Uint8
	Field data1:Sint32
	Field data2:Sint32
End
Struct SDL_KeyboardEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field windowID:Uint32
	Field state:Uint8
	Field repeat_:Uint8
	Field padding2:Uint8
	Field padding3:Uint8
	Field keysym:SDL_Keysym
End
Struct SDL_TextEditingEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field windowID:Uint32
	Field text:libc.char_t Ptr
	Field start:Sint32
	Field length:Sint32
End
Struct SDL_TextEditingExtEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field windowID:Uint32
	Field text:libc.char_t Ptr
	Field start:Sint32
	Field length:Sint32
End
Struct SDL_TextInputEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field windowID:Uint32
	Field text:libc.char_t Ptr
End
Struct SDL_MouseMotionEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field windowID:Uint32
	Field which:Uint32
	Field state:Uint32
	Field x:Sint32
	Field y:Sint32
	Field xrel:Sint32
	Field yrel:Sint32
End
Struct SDL_MouseButtonEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field windowID:Uint32
	Field which:Uint32
	Field button:Uint8
	Field state:Uint8
	Field clicks:Uint8
	Field padding1:Uint8
	Field x:Sint32
	Field y:Sint32
End
Struct SDL_MouseWheelEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field windowID:Uint32
	Field which:Uint32
	Field x:Sint32
	Field y:Sint32
	Field direction:Uint32
	Field preciseX:Float
	Field preciseY:Float
End
Struct SDL_JoyAxisEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field which:SDL_JoystickID
	Field axis:Uint8
	Field padding1:Uint8
	Field padding2:Uint8
	Field padding3:Uint8
	Field value:Sint16
	Field padding4:Uint16
End
Struct SDL_JoyBallEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field which:SDL_JoystickID
	Field ball:Uint8
	Field padding1:Uint8
	Field padding2:Uint8
	Field padding3:Uint8
	Field xrel:Sint16
	Field yrel:Sint16
End
Struct SDL_JoyHatEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field which:SDL_JoystickID
	Field hat:Uint8
	Field value:Uint8
	Field padding1:Uint8
	Field padding2:Uint8
End
Struct SDL_JoyButtonEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field which:SDL_JoystickID
	Field button:Uint8
	Field state:Uint8
	Field padding1:Uint8
	Field padding2:Uint8
End
Struct SDL_JoyDeviceEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field which:Sint32
End
Struct SDL_ControllerAxisEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field which:SDL_JoystickID
	Field axis:Uint8
	Field padding1:Uint8
	Field padding2:Uint8
	Field padding3:Uint8
	Field value:Sint16
	Field padding4:Uint16
End
Struct SDL_ControllerButtonEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field which:SDL_JoystickID
	Field button:Uint8
	Field state:Uint8
	Field padding1:Uint8
	Field padding2:Uint8
End
Struct SDL_ControllerDeviceEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field which:Sint32
End
Struct SDL_ControllerTouchpadEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field which:SDL_JoystickID
	Field touchpad:Sint32
	Field finger:Sint32
	Field x:Float
	Field y:Float
	Field pressure:Float
End
Struct SDL_ControllerSensorEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field which:SDL_JoystickID
	Field sensor:Sint32
	Field data:Float Ptr
End
Struct SDL_AudioDeviceEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field which:Uint32
	Field iscapture:Uint8
	Field padding1:Uint8
	Field padding2:Uint8
	Field padding3:Uint8
End
Struct SDL_TouchFingerEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field touchId:SDL_TouchID
	Field fingerId:SDL_FingerID
	Field x:Float
	Field y:Float
	Field dx:Float
	Field dy:Float
	Field pressure:Float
	Field windowID:Uint32
End
Struct SDL_MultiGestureEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field touchId:SDL_TouchID
	Field dTheta:Float
	Field dDist:Float
	Field x:Float
	Field y:Float
	Field numFingers:Uint16
	Field padding:Uint16
End
Struct SDL_DollarGestureEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field touchId:SDL_TouchID
	Field gestureId:SDL_GestureID
	Field numFingers:Uint32
	Field error:Float
	Field x:Float
	Field y:Float
End
Struct SDL_DropEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field file:libc.char_t Ptr
	Field windowID:Uint32
End
Struct SDL_SensorEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field which:Sint32
	Field data:Float Ptr
End
Struct SDL_QuitEvent
	Field type:Uint32
	Field timestamp:Uint32
End
Struct SDL_OSEvent
	Field type:Uint32
	Field timestamp:Uint32
End
Struct SDL_UserEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field windowID:Uint32
	Field code:Sint32
	Field data1:Void Ptr
	Field data2:Void Ptr
End
Struct SDL_SysWMEvent
	Field type:Uint32
	Field timestamp:Uint32
	Field msg:SDL_SysWMmsg Ptr
End
Struct SDL_Event
    Field type:Uint32
    Field common:SDL_CommonEvent
    Field display:SDL_DisplayEvent
    Field window:SDL_WindowEvent
    Field key:SDL_KeyboardEvent
    Field edit:SDL_TextEditingEvent
    Field editExt:SDL_TextEditingExtEvent
    Field text:SDL_TextInputEvent
    Field motion:SDL_MouseMotionEvent
    Field button:SDL_MouseButtonEvent
    Field wheel:SDL_MouseWheelEvent
    Field jaxis:SDL_JoyAxisEvent
    Field jball:SDL_JoyBallEvent
    Field jhat:SDL_JoyHatEvent
    Field jbutton:SDL_JoyButtonEvent
    Field jdevice:SDL_JoyDeviceEvent
    Field caxis:SDL_ControllerAxisEvent
    Field cbutton:SDL_ControllerButtonEvent
    Field cdevice:SDL_ControllerDeviceEvent
    Field ctouchpad:SDL_ControllerTouchpadEvent
    Field csensor:SDL_ControllerSensorEvent
    Field adevice:SDL_AudioDeviceEvent
    Field sensor:SDL_SensorEvent
    Field quit:SDL_QuitEvent
    Field user:SDL_UserEvent
    Field syswm:SDL_SysWMEvent
    Field tfinger:SDL_TouchFingerEvent
    Field mgesture:SDL_MultiGestureEvent
    Field dgestur:SDL_DollarGestureEvent
    Field drop:SDL_DropEvent
End
Function SDL_PumpEvents:Void(  )
Enum SDL_eventaction
End
Const SDL_ADDEVENT:SDL_eventaction
Const SDL_PEEKEVENT:SDL_eventaction
Const SDL_GETEVENT:SDL_eventaction
Function SDL_PeepEvents:Int( events:SDL_Event Ptr, numevents:Int, action:SDL_eventaction, minType:Uint32, maxType:Uint32 )
Function SDL_HasEvent:SDL_bool( type:Uint32 )
Function SDL_HasEvents:SDL_bool( minType:Uint32, maxType:Uint32 )
Function SDL_FlushEvent:Void( type:Uint32 )
Function SDL_FlushEvents:Void( minType:Uint32, maxType:Uint32 )
Function SDL_PollEvent:Int( event:SDL_Event Ptr )
Function SDL_WaitEvent:Int( event:SDL_Event Ptr )
Function SDL_WaitEventTimeout:Int( event:SDL_Event Ptr, timeout:Int )
Function SDL_PushEvent:Int( event:SDL_Event Ptr )
Alias SDL_EventFilter:Int( Void Ptr, SDL_Event Ptr )
Function SDL_SetEventFilter:Void( filter:SDL_EventFilter, userdata:Void Ptr )
Function SDL_GetEventFilter:SDL_bool( filter:SDL_EventFilter Ptr, userdata:Void Ptr Ptr )
Function SDL_AddEventWatch:Void( filter:SDL_EventFilter, userdata:Void Ptr )
Function SDL_DelEventWatch:Void( filter:SDL_EventFilter, userdata:Void Ptr )
Function SDL_FilterEvents:Void( filter:SDL_EventFilter, userdata:Void Ptr )
Function SDL_EventState:Uint8( type:Uint32, state:Int )
Function SDL_RegisterEvents:Uint32( numevents:Int )

'***** File: include/SDL2/SDL_filesystem.h *****

Function SDL_GetBasePath:libc.char_t Ptr(  )
Function SDL_GetPrefPath:libc.char_t Ptr( org:CString, app:CString )

'***** File: include/SDL2/SDL_haptic.h *****

Alias SDL_Haptic:_SDL_Haptic
Struct SDL_HapticDirection
	Field type:Uint8
	Field dir:Sint32 Ptr
End
Struct SDL_HapticConstant
	Field type:Uint16
	Field direction:SDL_HapticDirection
	Field length:Uint32
	Field delay:Uint16
	Field button:Uint16
	Field interval:Uint16
	Field level:Sint16
	Field attack_length:Uint16
	Field attack_level:Uint16
	Field fade_length:Uint16
	Field fade_level:Uint16
End
Struct SDL_HapticPeriodic
	Field type:Uint16
	Field direction:SDL_HapticDirection
	Field length:Uint32
	Field delay:Uint16
	Field button:Uint16
	Field interval:Uint16
	Field period:Uint16
	Field magnitude:Sint16
	Field offset:Sint16
	Field phase:Uint16
	Field attack_length:Uint16
	Field attack_level:Uint16
	Field fade_length:Uint16
	Field fade_level:Uint16
End
Struct SDL_HapticCondition
	Field type:Uint16
	Field direction:SDL_HapticDirection
	Field length:Uint32
	Field delay:Uint16
	Field button:Uint16
	Field interval:Uint16
	Field right_sat:Uint16 Ptr
	Field left_sat:Uint16 Ptr
	Field right_coeff:Sint16 Ptr
	Field left_coeff:Sint16 Ptr
	Field deadband:Uint16 Ptr
	Field center:Sint16 Ptr
End
Struct SDL_HapticRamp
	Field type:Uint16
	Field direction:SDL_HapticDirection
	Field length:Uint32
	Field delay:Uint16
	Field button:Uint16
	Field interval:Uint16
	Field start:Sint16
	Field end_:Sint16
	Field attack_length:Uint16
	Field attack_level:Uint16
	Field fade_length:Uint16
	Field fade_level:Uint16
End
Struct SDL_HapticLeftRight
	Field type:Uint16
	Field length:Uint32
	Field large_magnitude:Uint16
	Field small_magnitude:Uint16
End
Struct SDL_HapticCustom
	Field type:Uint16
	Field direction:SDL_HapticDirection
	Field length:Uint32
	Field delay:Uint16
	Field button:Uint16
	Field interval:Uint16
	Field channels:Uint8
	Field period:Uint16
	Field samples:Uint16
	Field data:Uint16 Ptr
	Field attack_length:Uint16
	Field attack_level:Uint16
	Field fade_length:Uint16
	Field fade_level:Uint16
End
Struct SDL_HapticEffect
End
Function SDL_NumHaptics:Int(  )
Function SDL_HapticName:CString( device_index:Int )
Function SDL_HapticOpen:SDL_Haptic Ptr( device_index:Int )
Function SDL_HapticOpened:Int( device_index:Int )
Function SDL_HapticIndex:Int( haptic:SDL_Haptic Ptr )
Function SDL_MouseIsHaptic:Int(  )
Function SDL_HapticOpenFromMouse:SDL_Haptic Ptr(  )
Function SDL_JoystickIsHaptic:Int( joystick:SDL_Joystick Ptr )
Function SDL_HapticOpenFromJoystick:SDL_Haptic Ptr( joystick:SDL_Joystick Ptr )
Function SDL_HapticClose:Void( haptic:SDL_Haptic Ptr )
Function SDL_HapticNumEffects:Int( haptic:SDL_Haptic Ptr )
Function SDL_HapticNumEffectsPlaying:Int( haptic:SDL_Haptic Ptr )
Function SDL_HapticQuery:UInt( haptic:SDL_Haptic Ptr )
Function SDL_HapticNumAxes:Int( haptic:SDL_Haptic Ptr )
Function SDL_HapticEffectSupported:Int( haptic:SDL_Haptic Ptr, effect:SDL_HapticEffect Ptr )
Function SDL_HapticNewEffect:Int( haptic:SDL_Haptic Ptr, effect:SDL_HapticEffect Ptr )
Function SDL_HapticUpdateEffect:Int( haptic:SDL_Haptic Ptr, effect:Int, data:SDL_HapticEffect Ptr )
Function SDL_HapticRunEffect:Int( haptic:SDL_Haptic Ptr, effect:Int, iterations:Uint32 )
Function SDL_HapticStopEffect:Int( haptic:SDL_Haptic Ptr, effect:Int )
Function SDL_HapticDestroyEffect:Void( haptic:SDL_Haptic Ptr, effect:Int )
Function SDL_HapticGetEffectStatus:Int( haptic:SDL_Haptic Ptr, effect:Int )
Function SDL_HapticSetGain:Int( haptic:SDL_Haptic Ptr, gain:Int )
Function SDL_HapticSetAutocenter:Int( haptic:SDL_Haptic Ptr, autocenter:Int )
Function SDL_HapticPause:Int( haptic:SDL_Haptic Ptr )
Function SDL_HapticUnpause:Int( haptic:SDL_Haptic Ptr )
Function SDL_HapticStopAll:Int( haptic:SDL_Haptic Ptr )
Function SDL_HapticRumbleSupported:Int( haptic:SDL_Haptic Ptr )
Function SDL_HapticRumbleInit:Int( haptic:SDL_Haptic Ptr )
Function SDL_HapticRumblePlay:Int( haptic:SDL_Haptic Ptr, strength:Float, length:Uint32 )
Function SDL_HapticRumbleStop:Int( haptic:SDL_Haptic Ptr )

'***** File: include/SDL2/SDL_hidapi.h *****

Alias SDL_hid_device:SDL_hid_device_
Struct SDL_hid_device_info
	Field path:libc.char_t Ptr
	Field vendor_id:UShort
	Field product_id:UShort
	Field serial_number:Int Ptr
	Field release_number:UShort
	Field manufacturer_string:Int Ptr
	Field product_string:Int Ptr
	Field usage_page:UShort
	Field usage:UShort
	Field interface_number:Int
	Field interface_class:Int
	Field interface_subclass:Int
	Field interface_protocol:Int
	Field next_:SDL_hid_device_info Ptr
End
Function SDL_hid_init:Int(  )
Function SDL_hid_exit:Int(  )
Function SDL_hid_device_change_count:Uint32(  )
Function SDL_hid_enumerate:SDL_hid_device_info Ptr( vendor_id:UShort, product_id:UShort )
Function SDL_hid_free_enumeration:Void( devs:SDL_hid_device_info Ptr )
Function SDL_hid_open:SDL_hid_device Ptr( vendor_id:UShort, product_id:UShort, serial_number:Int Ptr )
Function SDL_hid_open_path:SDL_hid_device Ptr( path:CString, bExclusive:Int )
Function SDL_hid_write:Int( dev:SDL_hid_device Ptr, data:CString, length:libc.size_t )
Function SDL_hid_read_timeout:Int( dev:SDL_hid_device Ptr, data:UByte Ptr, length:libc.size_t, milliseconds:Int )
Function SDL_hid_read:Int( dev:SDL_hid_device Ptr, data:UByte Ptr, length:libc.size_t )
Function SDL_hid_set_nonblocking:Int( dev:SDL_hid_device Ptr, nonblock:Int )
Function SDL_hid_send_feature_report:Int( dev:SDL_hid_device Ptr, data:CString, length:libc.size_t )
Function SDL_hid_get_feature_report:Int( dev:SDL_hid_device Ptr, data:UByte Ptr, length:libc.size_t )
Function SDL_hid_close:Void( dev:SDL_hid_device Ptr )
Function SDL_hid_get_manufacturer_string:Int( dev:SDL_hid_device Ptr, string_:Int Ptr, maxlen:libc.size_t )
Function SDL_hid_get_product_string:Int( dev:SDL_hid_device Ptr, string_:Int Ptr, maxlen:libc.size_t )
Function SDL_hid_get_serial_number_string:Int( dev:SDL_hid_device Ptr, string_:Int Ptr, maxlen:libc.size_t )
Function SDL_hid_get_indexed_string:Int( dev:SDL_hid_device Ptr, string_index:Int, string_:Int Ptr, maxlen:libc.size_t )
Function SDL_hid_ble_scan:Void( active:SDL_bool )

'***** File: include/SDL2/SDL_hints.h *****

Enum SDL_HintPriority
End
Const SDL_HINT_DEFAULT:SDL_HintPriority
Const SDL_HINT_NORMAL:SDL_HintPriority
Const SDL_HINT_OVERRIDE:SDL_HintPriority
Function SDL_SetHintWithPriority:SDL_bool( name:CString, value:CString, priority:SDL_HintPriority )
Function SDL_SetHint:SDL_bool( name:CString, value:CString )
Function SDL_GetHint:CString( name:CString )
Function SDL_GetHintBoolean:SDL_bool( name:CString, default_value:SDL_bool )
Alias SDL_HintCallback:Void( Void Ptr, CString, CString, CString )
Function SDL_AddHintCallback:Void( name:CString, callback:SDL_HintCallback, userdata:Void Ptr )
Function SDL_DelHintCallback:Void( name:CString, callback:SDL_HintCallback, userdata:Void Ptr )
Function SDL_ClearHints:Void(  )

'***** File: include/SDL2/SDL_loadso.h *****

Function SDL_LoadObject:Void Ptr( sofile:CString )
Function SDL_LoadFunction:Void Ptr( handle:Void Ptr, name:CString )
Function SDL_UnloadObject:Void( handle:Void Ptr )

'***** File: include/SDL2/SDL_log.h *****

Enum SDL_LogCategory
End
Const SDL_LOG_CATEGORY_APPLICATION:SDL_LogCategory
Const SDL_LOG_CATEGORY_ERROR:SDL_LogCategory
Const SDL_LOG_CATEGORY_ASSERT:SDL_LogCategory
Const SDL_LOG_CATEGORY_SYSTEM:SDL_LogCategory
Const SDL_LOG_CATEGORY_AUDIO:SDL_LogCategory
Const SDL_LOG_CATEGORY_VIDEO:SDL_LogCategory
Const SDL_LOG_CATEGORY_RENDER:SDL_LogCategory
Const SDL_LOG_CATEGORY_INPUT:SDL_LogCategory
Const SDL_LOG_CATEGORY_TEST:SDL_LogCategory
Const SDL_LOG_CATEGORY_RESERVED1:SDL_LogCategory
Const SDL_LOG_CATEGORY_RESERVED2:SDL_LogCategory
Const SDL_LOG_CATEGORY_RESERVED3:SDL_LogCategory
Const SDL_LOG_CATEGORY_RESERVED4:SDL_LogCategory
Const SDL_LOG_CATEGORY_RESERVED5:SDL_LogCategory
Const SDL_LOG_CATEGORY_RESERVED6:SDL_LogCategory
Const SDL_LOG_CATEGORY_RESERVED7:SDL_LogCategory
Const SDL_LOG_CATEGORY_RESERVED8:SDL_LogCategory
Const SDL_LOG_CATEGORY_RESERVED9:SDL_LogCategory
Const SDL_LOG_CATEGORY_RESERVED10:SDL_LogCategory
Const SDL_LOG_CATEGORY_CUSTOM:SDL_LogCategory
Enum SDL_LogPriority
End
Const SDL_LOG_PRIORITY_VERBOSE:SDL_LogPriority
Const SDL_LOG_PRIORITY_DEBUG:SDL_LogPriority
Const SDL_LOG_PRIORITY_INFO:SDL_LogPriority
Const SDL_LOG_PRIORITY_WARN:SDL_LogPriority
Const SDL_LOG_PRIORITY_ERROR:SDL_LogPriority
Const SDL_LOG_PRIORITY_CRITICAL:SDL_LogPriority
Const SDL_NUM_LOG_PRIORITIES:SDL_LogPriority
Function SDL_LogSetAllPriority:Void( priority:SDL_LogPriority )
Function SDL_LogSetPriority:Void( category:Int, priority:SDL_LogPriority )
Function SDL_LogGetPriority:SDL_LogPriority( category:Int )
Function SDL_LogResetPriorities:Void(  )
Function SDL_Log:Void( Int )
Function SDL_LogVerbose:Void( category:Int, Int )
Function SDL_LogDebug:Void( category:Int, Int )
Function SDL_LogInfo:Void( category:Int, Int )
Function SDL_LogWarn:Void( category:Int, Int )
Function SDL_LogError:Void( category:Int, Int )
Function SDL_LogCritical:Void( category:Int, Int )
Function SDL_LogMessage:Void( category:Int, priority:SDL_LogPriority, Int )
Function SDL_LogMessageV:Void( category:Int, priority:SDL_LogPriority, fmt:CString, ap:Int )
Alias SDL_LogOutputFunction:Void( Void Ptr, Int, SDL_LogPriority, CString )
Function SDL_LogGetOutputFunction:Void( callback:SDL_LogOutputFunction Ptr, userdata:Void Ptr Ptr )
Function SDL_LogSetOutputFunction:Void( callback:SDL_LogOutputFunction, userdata:Void Ptr )

'***** File: include/SDL2/SDL_messagebox.h *****

Enum SDL_MessageBoxFlags
End
Const SDL_MESSAGEBOX_ERROR:SDL_MessageBoxFlags
Const SDL_MESSAGEBOX_WARNING:SDL_MessageBoxFlags
Const SDL_MESSAGEBOX_INFORMATION:SDL_MessageBoxFlags
Const SDL_MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT:SDL_MessageBoxFlags
Const SDL_MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT:SDL_MessageBoxFlags
Enum SDL_MessageBoxButtonFlags
End
Const SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT:SDL_MessageBoxButtonFlags
Const SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT:SDL_MessageBoxButtonFlags
Struct SDL_MessageBoxButtonData
	Field flags:Uint32
	Field buttonid:Int
	Field text:CString
End
Struct SDL_MessageBoxColor
	Field r:Uint8
	Field g:Uint8
	Field b:Uint8
End
Enum SDL_MessageBoxColorType
End
Const SDL_MESSAGEBOX_COLOR_BACKGROUND:SDL_MessageBoxColorType
Const SDL_MESSAGEBOX_COLOR_TEXT:SDL_MessageBoxColorType
Const SDL_MESSAGEBOX_COLOR_BUTTON_BORDER:SDL_MessageBoxColorType
Const SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND:SDL_MessageBoxColorType
Const SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED:SDL_MessageBoxColorType
Const SDL_MESSAGEBOX_COLOR_MAX:SDL_MessageBoxColorType
Struct SDL_MessageBoxColorScheme
	Field colors:SDL_MessageBoxColor Ptr
End
Struct SDL_MessageBoxData
	Field flags:Uint32
	Field window:SDL_Window Ptr
	Field title:CString
	Field message:CString
	Field numbuttons:Int
	Field buttons:SDL_MessageBoxButtonData Ptr
	Field colorScheme:SDL_MessageBoxColorScheme Ptr
End
Function SDL_ShowMessageBox:Int( messageboxdata:SDL_MessageBoxData Ptr, buttonid:Int Ptr )
Function SDL_ShowSimpleMessageBox:Int( flags:Uint32, title:CString, message:CString, window:SDL_Window Ptr )

'***** File: include/SDL2/SDL_metal.h *****

Alias SDL_MetalView:Void Ptr
Function SDL_Metal_CreateView:SDL_MetalView( window:SDL_Window Ptr )
Function SDL_Metal_DestroyView:Void( view:SDL_MetalView )
Function SDL_Metal_GetLayer:Void Ptr( view:SDL_MetalView )
Function SDL_Metal_GetDrawableSize:Void( window:SDL_Window Ptr, w:Int Ptr, h:Int Ptr )

'***** File: include/SDL2/SDL_power.h *****

Enum SDL_PowerState
End
Const SDL_POWERSTATE_UNKNOWN:SDL_PowerState
Const SDL_POWERSTATE_ON_BATTERY:SDL_PowerState
Const SDL_POWERSTATE_NO_BATTERY:SDL_PowerState
Const SDL_POWERSTATE_CHARGING:SDL_PowerState
Const SDL_POWERSTATE_CHARGED:SDL_PowerState
Function SDL_GetPowerInfo:SDL_PowerState( secs:Int Ptr, pct:Int Ptr )

'***** File: include/SDL2/SDL_render.h *****

Enum SDL_RendererFlags
End
Const SDL_RENDERER_SOFTWARE:SDL_RendererFlags
Const SDL_RENDERER_ACCELERATED:SDL_RendererFlags
Const SDL_RENDERER_PRESENTVSYNC:SDL_RendererFlags
Const SDL_RENDERER_TARGETTEXTURE:SDL_RendererFlags
Struct SDL_RendererInfo
	Field name:CString
	Field flags:Uint32
	Field num_texture_formats:Uint32
	Field texture_formats:Uint32 Ptr
	Field max_texture_width:Int
	Field max_texture_height:Int
End
Struct SDL_Vertex
	Field position:SDL_FPoint
	Field color:SDL_Color
	Field tex_coord:SDL_FPoint
End
Enum SDL_ScaleMode
End
Const SDL_ScaleModeNearest:SDL_ScaleMode
Const SDL_ScaleModeLinear:SDL_ScaleMode
Const SDL_ScaleModeBest:SDL_ScaleMode
Enum SDL_TextureAccess
End
Const SDL_TEXTUREACCESS_STATIC:SDL_TextureAccess
Const SDL_TEXTUREACCESS_STREAMING:SDL_TextureAccess
Const SDL_TEXTUREACCESS_TARGET:SDL_TextureAccess
Enum SDL_TextureModulate
End
Const SDL_TEXTUREMODULATE_NONE:SDL_TextureModulate
Const SDL_TEXTUREMODULATE_COLOR:SDL_TextureModulate
Const SDL_TEXTUREMODULATE_ALPHA:SDL_TextureModulate
Enum SDL_RendererFlip
End
Const SDL_FLIP_NONE:SDL_RendererFlip
Const SDL_FLIP_HORIZONTAL:SDL_RendererFlip
Const SDL_FLIP_VERTICAL:SDL_RendererFlip
Function SDL_GetNumRenderDrivers:Int(  )
Function SDL_GetRenderDriverInfo:Int( index:Int, info:SDL_RendererInfo Ptr )
Function SDL_CreateWindowAndRenderer:Int( width:Int, height:Int, window_flags:Uint32, window:SDL_Window Ptr Ptr, renderer:SDL_Renderer Ptr Ptr )
Function SDL_CreateRenderer:SDL_Renderer Ptr( window:SDL_Window Ptr, index:Int, flags:Uint32 )
Function SDL_CreateSoftwareRenderer:SDL_Renderer Ptr( surface:SDL_Surface Ptr )
Function SDL_GetRenderer:SDL_Renderer Ptr( window:SDL_Window Ptr )
Function SDL_RenderGetWindow:SDL_Window Ptr( renderer:SDL_Renderer Ptr )
Function SDL_GetRendererInfo:Int( renderer:SDL_Renderer Ptr, info:SDL_RendererInfo Ptr )
Function SDL_GetRendererOutputSize:Int( renderer:SDL_Renderer Ptr, w:Int Ptr, h:Int Ptr )
Function SDL_CreateTexture:SDL_Texture Ptr( renderer:SDL_Renderer Ptr, format:Uint32, access:Int, w:Int, h:Int )
Function SDL_CreateTextureFromSurface:SDL_Texture Ptr( renderer:SDL_Renderer Ptr, surface:SDL_Surface Ptr )
Function SDL_QueryTexture:Int( texture:SDL_Texture Ptr, format:Uint32 Ptr, access:Int Ptr, w:Int Ptr, h:Int Ptr )
Function SDL_SetTextureColorMod:Int( texture:SDL_Texture Ptr, r:Uint8, g:Uint8, b:Uint8 )
Function SDL_GetTextureColorMod:Int( texture:SDL_Texture Ptr, r:Uint8 Ptr, g:Uint8 Ptr, b:Uint8 Ptr )
Function SDL_SetTextureAlphaMod:Int( texture:SDL_Texture Ptr, alpha:Uint8 )
Function SDL_GetTextureAlphaMod:Int( texture:SDL_Texture Ptr, alpha:Uint8 Ptr )
Function SDL_SetTextureBlendMode:Int( texture:SDL_Texture Ptr, blendMode:SDL_BlendMode )
Function SDL_GetTextureBlendMode:Int( texture:SDL_Texture Ptr, blendMode:SDL_BlendMode Ptr )
Function SDL_SetTextureScaleMode:Int( texture:SDL_Texture Ptr, scaleMode:SDL_ScaleMode )
Function SDL_GetTextureScaleMode:Int( texture:SDL_Texture Ptr, scaleMode:SDL_ScaleMode Ptr )
Function SDL_SetTextureUserData:Int( texture:SDL_Texture Ptr, userdata:Void Ptr )
Function SDL_GetTextureUserData:Void Ptr( texture:SDL_Texture Ptr )
Function SDL_UpdateTexture:Int( texture:SDL_Texture Ptr, rect:SDL_Rect Ptr, pixels:Void Ptr, pitch:Int )
Function SDL_UpdateYUVTexture:Int( texture:SDL_Texture Ptr, rect:SDL_Rect Ptr, Yplane:Uint8 Ptr, Ypitch:Int, Uplane:Uint8 Ptr, Upitch:Int, Vplane:Uint8 Ptr, Vpitch:Int )
Function SDL_UpdateNVTexture:Int( texture:SDL_Texture Ptr, rect:SDL_Rect Ptr, Yplane:Uint8 Ptr, Ypitch:Int, UVplane:Uint8 Ptr, UVpitch:Int )
Function SDL_LockTexture:Int( texture:SDL_Texture Ptr, rect:SDL_Rect Ptr, pixels:Void Ptr Ptr, pitch:Int Ptr )
Function SDL_LockTextureToSurface:Int( texture:SDL_Texture Ptr, rect:SDL_Rect Ptr, surface:SDL_Surface Ptr Ptr )
Function SDL_UnlockTexture:Void( texture:SDL_Texture Ptr )
Function SDL_RenderTargetSupported:SDL_bool( renderer:SDL_Renderer Ptr )
Function SDL_SetRenderTarget:Int( renderer:SDL_Renderer Ptr, texture:SDL_Texture Ptr )
Function SDL_GetRenderTarget:SDL_Texture Ptr( renderer:SDL_Renderer Ptr )
Function SDL_RenderSetLogicalSize:Int( renderer:SDL_Renderer Ptr, w:Int, h:Int )
Function SDL_RenderGetLogicalSize:Void( renderer:SDL_Renderer Ptr, w:Int Ptr, h:Int Ptr )
Function SDL_RenderSetIntegerScale:Int( renderer:SDL_Renderer Ptr, enable:SDL_bool )
Function SDL_RenderGetIntegerScale:SDL_bool( renderer:SDL_Renderer Ptr )
Function SDL_RenderSetViewport:Int( renderer:SDL_Renderer Ptr, rect:SDL_Rect Ptr )
Function SDL_RenderGetViewport:Void( renderer:SDL_Renderer Ptr, rect:SDL_Rect Ptr )
Function SDL_RenderSetClipRect:Int( renderer:SDL_Renderer Ptr, rect:SDL_Rect Ptr )
Function SDL_RenderGetClipRect:Void( renderer:SDL_Renderer Ptr, rect:SDL_Rect Ptr )
Function SDL_RenderIsClipEnabled:SDL_bool( renderer:SDL_Renderer Ptr )
Function SDL_RenderSetScale:Int( renderer:SDL_Renderer Ptr, scaleX:Float, scaleY:Float )
Function SDL_RenderGetScale:Void( renderer:SDL_Renderer Ptr, scaleX:Float Ptr, scaleY:Float Ptr )
Function SDL_RenderWindowToLogical:Void( renderer:SDL_Renderer Ptr, windowX:Int, windowY:Int, logicalX:Float Ptr, logicalY:Float Ptr )
Function SDL_RenderLogicalToWindow:Void( renderer:SDL_Renderer Ptr, logicalX:Float, logicalY:Float, windowX:Int Ptr, windowY:Int Ptr )
Function SDL_SetRenderDrawColor:Int( renderer:SDL_Renderer Ptr, r:Uint8, g:Uint8, b:Uint8, a:Uint8 )
Function SDL_GetRenderDrawColor:Int( renderer:SDL_Renderer Ptr, r:Uint8 Ptr, g:Uint8 Ptr, b:Uint8 Ptr, a:Uint8 Ptr )
Function SDL_SetRenderDrawBlendMode:Int( renderer:SDL_Renderer Ptr, blendMode:SDL_BlendMode )
Function SDL_GetRenderDrawBlendMode:Int( renderer:SDL_Renderer Ptr, blendMode:SDL_BlendMode Ptr )
Function SDL_RenderClear:Int( renderer:SDL_Renderer Ptr )
Function SDL_RenderDrawPoint:Int( renderer:SDL_Renderer Ptr, x:Int, y:Int )
Function SDL_RenderDrawPoints:Int( renderer:SDL_Renderer Ptr, points:SDL_Point Ptr, count:Int )
Function SDL_RenderDrawLine:Int( renderer:SDL_Renderer Ptr, x1:Int, y1:Int, x2:Int, y2:Int )
Function SDL_RenderDrawLines:Int( renderer:SDL_Renderer Ptr, points:SDL_Point Ptr, count:Int )
Function SDL_RenderDrawRect:Int( renderer:SDL_Renderer Ptr, rect:SDL_Rect Ptr )
Function SDL_RenderDrawRects:Int( renderer:SDL_Renderer Ptr, rects:SDL_Rect Ptr, count:Int )
Function SDL_RenderFillRect:Int( renderer:SDL_Renderer Ptr, rect:SDL_Rect Ptr )
Function SDL_RenderFillRects:Int( renderer:SDL_Renderer Ptr, rects:SDL_Rect Ptr, count:Int )
Function SDL_RenderCopy:Int( renderer:SDL_Renderer Ptr, texture:SDL_Texture Ptr, srcrect:SDL_Rect Ptr, dstrect:SDL_Rect Ptr )
Function SDL_RenderCopyEx:Int( renderer:SDL_Renderer Ptr, texture:SDL_Texture Ptr, srcrect:SDL_Rect Ptr, dstrect:SDL_Rect Ptr, angle:Double, center:SDL_Point Ptr, flip:SDL_RendererFlip )
Function SDL_RenderDrawPointF:Int( renderer:SDL_Renderer Ptr, x:Float, y:Float )
Function SDL_RenderDrawPointsF:Int( renderer:SDL_Renderer Ptr, points:SDL_FPoint Ptr, count:Int )
Function SDL_RenderDrawLineF:Int( renderer:SDL_Renderer Ptr, x1:Float, y1:Float, x2:Float, y2:Float )
Function SDL_RenderDrawLinesF:Int( renderer:SDL_Renderer Ptr, points:SDL_FPoint Ptr, count:Int )
Function SDL_RenderDrawRectF:Int( renderer:SDL_Renderer Ptr, rect:SDL_FRect Ptr )
Function SDL_RenderDrawRectsF:Int( renderer:SDL_Renderer Ptr, rects:SDL_FRect Ptr, count:Int )
Function SDL_RenderFillRectF:Int( renderer:SDL_Renderer Ptr, rect:SDL_FRect Ptr )
Function SDL_RenderFillRectsF:Int( renderer:SDL_Renderer Ptr, rects:SDL_FRect Ptr, count:Int )
Function SDL_RenderCopyF:Int( renderer:SDL_Renderer Ptr, texture:SDL_Texture Ptr, srcrect:SDL_Rect Ptr, dstrect:SDL_FRect Ptr )
Function SDL_RenderCopyExF:Int( renderer:SDL_Renderer Ptr, texture:SDL_Texture Ptr, srcrect:SDL_Rect Ptr, dstrect:SDL_FRect Ptr, angle:Double, center:SDL_FPoint Ptr, flip:SDL_RendererFlip )
Function SDL_RenderGeometry:Int( renderer:SDL_Renderer Ptr, texture:SDL_Texture Ptr, vertices:SDL_Vertex Ptr, num_vertices:Int, indices:Int Ptr, num_indices:Int )
Function SDL_RenderGeometryRaw:Int( renderer:SDL_Renderer Ptr, texture:SDL_Texture Ptr, xy:Float Ptr, xy_stride:Int, color:SDL_Color Ptr, color_stride:Int, uv:Float Ptr, uv_stride:Int, num_vertices:Int, indices:Void Ptr, num_indices:Int, size_indices:Int )
Function SDL_RenderReadPixels:Int( renderer:SDL_Renderer Ptr, rect:SDL_Rect Ptr, format:Uint32, pixels:Void Ptr, pitch:Int )
Function SDL_RenderPresent:Void( renderer:SDL_Renderer Ptr )
Function SDL_DestroyTexture:Void( texture:SDL_Texture Ptr )
Function SDL_DestroyRenderer:Void( renderer:SDL_Renderer Ptr )
Function SDL_RenderFlush:Int( renderer:SDL_Renderer Ptr )
Function SDL_GL_BindTexture:Int( texture:SDL_Texture Ptr, texw:Float Ptr, texh:Float Ptr )
Function SDL_GL_UnbindTexture:Int( texture:SDL_Texture Ptr )
Function SDL_RenderGetMetalLayer:Void Ptr( renderer:SDL_Renderer Ptr )
Function SDL_RenderGetMetalCommandEncoder:Void Ptr( renderer:SDL_Renderer Ptr )
Function SDL_RenderSetVSync:Int( renderer:SDL_Renderer Ptr, vsync:Int )

'***** File: include/SDL2/SDL_shape.h *****

Function SDL_CreateShapedWindow:SDL_Window Ptr( title:CString, x:UInt, y:UInt, w:UInt, h:UInt, flags:Uint32 )
Function SDL_IsShapedWindow:SDL_bool( window:SDL_Window Ptr )
Enum WindowShapeMode
End
Const ShapeModeDefault:WindowShapeMode
Const ShapeModeBinarizeAlpha:WindowShapeMode
Const ShapeModeReverseBinarizeAlpha:WindowShapeMode
Const ShapeModeColorKey:WindowShapeMode
Struct SDL_WindowShapeParams
End
Struct SDL_WindowShapeMode
	Field mode:WindowShapeMode
	Field parameters:SDL_WindowShapeParams
End
Function SDL_SetWindowShape:Int( window:SDL_Window Ptr, shape:SDL_Surface Ptr, shape_mode:SDL_WindowShapeMode Ptr )
Function SDL_GetShapedWindowMode:Int( window:SDL_Window Ptr, shape_mode:SDL_WindowShapeMode Ptr )

'***** File: include/SDL2/SDL_system.h *****

Alias SDL_WindowsMessageHook:Void( Void Ptr, Void Ptr, UInt, Uint64, Sint64 )
Function SDL_SetWindowsMessageHook:Void( callback:SDL_WindowsMessageHook, userdata:Void Ptr )
Function SDL_Direct3D9GetAdapterIndex:Int( displayIndex:Int )
Function SDL_RenderGetD3D9Device:IDirect3DDevice9 Ptr( renderer:SDL_Renderer Ptr )
Function SDL_RenderGetD3D11Device:ID3D11Device Ptr( renderer:SDL_Renderer Ptr )
Function SDL_DXGIGetOutputInfo:SDL_bool( displayIndex:Int, adapterIndex:Int Ptr, outputIndex:Int Ptr )
Function SDL_IsTablet:SDL_bool(  )
Function SDL_OnApplicationWillTerminate:Void(  )
Function SDL_OnApplicationDidReceiveMemoryWarning:Void(  )
Function SDL_OnApplicationWillResignActive:Void(  )
Function SDL_OnApplicationDidEnterBackground:Void(  )
Function SDL_OnApplicationWillEnterForeground:Void(  )
Function SDL_OnApplicationDidBecomeActive:Void(  )

'***** File: include/SDL2/SDL_timer.h *****

Function SDL_GetTicks:Uint32(  )
Function SDL_GetTicks64:Uint64(  )
Function SDL_GetPerformanceCounter:Uint64(  )
Function SDL_GetPerformanceFrequency:Uint64(  )
Function SDL_Delay:Void( ms:Uint32 )
Alias SDL_TimerCallback:Uint32( Uint32, Void Ptr )
Alias SDL_TimerID:Int
Function SDL_AddTimer:SDL_TimerID( interval:Uint32, callback:SDL_TimerCallback, param:Void Ptr )
Function SDL_RemoveTimer:SDL_bool( id:SDL_TimerID )

'***** File: include/SDL2/SDL_version.h *****

Struct SDL_version
	Field major:Uint8
	Field minor:Uint8
	Field patch:Uint8
End
Function SDL_GetVersion:Void( ver:SDL_version Ptr )
Function SDL_GetRevision:CString(  )
Function SDL_GetRevisionNumber:Int(  )

'***** File: include/SDL2/SDL_locale.h *****

Struct SDL_Locale
	Field language:CString
	Field country:CString
End
Function SDL_GetPreferredLocales:SDL_Locale Ptr(  )

'***** File: include/SDL2/SDL_misc.h *****

Function SDL_OpenURL:Int( url:CString )

'***** File: include/SDL2/SDL.h *****

Const SDL_INIT_TIMER:Uint32
Const SDL_INIT_AUDIO:Uint32
Const SDL_INIT_VIDEO:Uint32
Const SDL_INIT_JOYSTICK:Uint32
Const SDL_INIT_HAPTIC:Uint32
Const SDL_INIT_GAMECONTROLLER:Uint32
Const SDL_INIT_EVENTS:Uint32
Const SDL_INIT_SENSOR:Uint32
Const SDL_INIT_NOPARACHUTE:Uint32
Const SDL_INIT_EVERYTHING:Uint32

Function SDL_Init:Int( flags:Uint32 )
Function SDL_InitSubSystem:Int( flags:Uint32 )
Function SDL_QuitSubSystem:Void( flags:Uint32 )
Function SDL_WasInit:Uint32( flags:Uint32 )
Function SDL_Quit:Void(  )

'***** Extern Structs *****

Struct ID3D11Device
End
Struct IDirect3DDevice9
End
Struct SDL_Cursor
End
Struct SDL_Renderer
End
Struct SDL_SysWMmsg
End
Struct SDL_Texture
End
Struct SDL_Thread
End
Struct SDL_Window
End
Struct SDL_cond
End
Struct SDL_hid_device_
End
Struct SDL_mutex
End
Struct SDL_semaphore
End
Struct _SDL_AudioStream
End
Struct _SDL_GameController
End
Struct _SDL_Haptic
End
Struct _SDL_Joystick
End
Struct _SDL_Sensor
End
Struct _SDL_iconv_t
End
